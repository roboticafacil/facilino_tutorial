!function(o){"function"==typeof define&&define.amd?define(["underscore","blockly-bq","blockly.blocks"],o):o(_,window.Blockly,window.Blocks)}(function(_,Blockly,Blocks){var load=function(options){var profiles;RoboBlocks.locales={defaultLanguage:{},processor:""},RoboBlocks.locales.setLang=function(o){this.defaultLanguage=o},RoboBlocks.locales.getKey=function(o){return this.defaultLanguage[o]||this.EngLanguage[o]},RoboBlocks.locales.setKey=function(o,e){this.defaultLanguage[o]=e},RoboBlocks.getHelpUrl=function(o){return'<script>$(function(){var file = "doc/"+roboblocksLanguage+"/'+o+'.html"; $.ajax({url:file,async:false,type:"HEAD",error: function(){file="doc/en-GB/'+o+'.html";},success: function(){}}); $("#doc").load(file);});<\/script>'},RoboBlocks.locales.initialize=function(){return this.defaultLanguage=options.langKeys||window.langKeys||{},this.EngLanguage=window.langKeysEng,this.processor=options.proc||window.FacilinoProcessor||"ArduinoNano",this},RoboBlocks.locales.initialize(),RoboBlocks.variables={},RoboBlocks.isVariable=function(o){for(var e in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[e]===o)return!0;return void 0!==RoboBlocks.variables[o]||(0<=o.search("digitalRead\\(")||0<=o.search("analogRead\\("))},RoboBlocks.findPinMode=function(o){var e="";for(var l in o=o.split(";\n"))0<=o[l].search("pinMode")?e+=o[l]+";\n":o=o[l];return{code:e,pin:o}},RoboBlocks.LANG_COLOUR_DISTANCE="#D04141",RoboBlocks.LANG_COLOUR_DISTANCE_ULTRASOUND="#D04141",RoboBlocks.LANG_COLOUR_SOUND="#CC7B44",RoboBlocks.LANG_COLOUR_SOUND_BUZZER="#CC7B44",RoboBlocks.LANG_COLOUR_SOUND_VOICE="#B46B3A",RoboBlocks.LANG_COLOUR_SOUND_MIC="#9D5C30",RoboBlocks.LANG_COLOUR_SOUND_MUSIC="#854C26",RoboBlocks.LANG_COLOUR_MOVEMENT="#CECE42",RoboBlocks.LANG_COLOUR_MOVEMENT_MOTORS="#CECE42",RoboBlocks.LANG_COLOUR_MOVEMENT_ROBOTBASE="#B8B838",RoboBlocks.LANG_COLOUR_MOVEMENT_ROBOTACC="#A3A32F",RoboBlocks.LANG_COLOUR_MOVEMENT_WALK="#8D8D25",RoboBlocks.LANG_COLOUR_SCREEN="#ACCE42",RoboBlocks.LANG_COLOUR_SCREEN_LCD="#ACCE42",RoboBlocks.LANG_COLOUR_SCREEN_LEDMATRIX="#9DBD3A",RoboBlocks.LANG_COLOUR_CONTROL="#44CC44",RoboBlocks.LANG_COLOUR_CONTROL_INTERRUPTS="#3EB83E",RoboBlocks.LANG_COLOUR_CONTROL_STATEMACHINE="#39A539",RoboBlocks.LANG_COLOUR_LOGIC="#42CE91",RoboBlocks.LANG_COLOUR_LOGIC_BITWISE="#39C576",RoboBlocks.LANG_COLOUR_MATH="#42CBCE",RoboBlocks.LANG_COLOUR_TEXT="#42A3CE",RoboBlocks.LANG_COLOUR_COMMUNICATION="#4263CE",RoboBlocks.LANG_COLOUR_COMMUNICATION_USB="#4263CE",RoboBlocks.LANG_COLOUR_COMMUNICATION_BLUETOOTH="#3B5ABD",RoboBlocks.LANG_COLOUR_COMMUNICATION_WIFI="#3551AC",RoboBlocks.LANG_COLOUR_COMMUNICATION_IOT="#2E489B",RoboBlocks.LANG_COLOUR_COMMUNICATION_IR="#283F8A",RoboBlocks.LANG_COLOUR_ADVANCED="#9142CE",RoboBlocks.LANG_COLOUR_ADVANCED_ANALOG="#9142CE",RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL="#853BBE",RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON="#7A34AF",RoboBlocks.LANG_COLOUR_ADVANCED_BUS="#6E2DA0",RoboBlocks.LANG_COLOUR_ADVANCED_OTHER="#632791",RoboBlocks.LANG_COLOUR_VARIABLES="#B244CC",RoboBlocks.LANG_COLOUR_PROCEDURES="#CE42B3",RoboBlocks.LANG_COLOUR_LIGHT="#FF8A00",RoboBlocks.LANG_COLOUR_LIGHT_INFRARED="#FF8A00",RoboBlocks.LANG_COLOUR_LIGHT_COLOR="#E87E00",RoboBlocks.LANG_COLOUR_LIGHT_LDR="#D27201",RoboBlocks.LANG_COLOUR_LIGHT_DIMMER="#BB6602",RoboBlocks.LANG_COLOUR_AMBIENT="#99CCFF",RoboBlocks.LANG_COLOUR_AMBIENT_TEMPERATURE="#99CCFF",RoboBlocks.LANG_COLOUR_AMBIENT_HUMIDITY="#78BBFE",RoboBlocks.LANG_COLOUR_AMBIENT_RAIN="#58ABFD",RoboBlocks.LANG_COLOUR_AMBIENT_OTHER="#389AFC",RoboBlocks.LANG_COLOUR_HTML="#BDBDBD",RoboBlocks.LANG_COLOUR_BLOCKS="#FF00FF",RoboBlocks.LANG_COLOUR_SYSTEM="#ADAD85",RoboBlocks.LANG_COLOUR_SYSTEM_CONTROL="#ADAD85",RoboBlocks.LANG_COLOUR_SYSTEM_FILTERS="#A3A375",RoboBlocks.LANG_COLOUR_DEPRECATED="#000000",$.ajax({url:"profiles.json",dataType:"text",async:!1}).done(function(o){profiles=$.parseJSON(o),"ArduinoNano"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoNano,profiles.processor="ATmega328"):"ArduinoUno"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoUno,profiles.processor="ATmega328"):"ArduinoMega2560"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoMega2560,profiles.processor="ATmega2560"):"ArduinoMicro"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoMicro,profiles.processor="ATmega32U4"):"ArduinoLilyPad"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoLilyPad,profiles.processor="ATmega328"):"ArduinoMini"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoMini,profiles.processor="ATmega328"):"ArduinoLeonardo"===RoboBlocks.locales.processor?(profiles.default=profiles.arduinoLeonardo,profiles.processor="ATmega32U4"):"ESP8266"===RoboBlocks.locales.processor?(profiles.default=profiles.esp8266,profiles.processor="ESP8266"):"NodeMCU"===RoboBlocks.locales.processor?(profiles.default=profiles.nodeMCU,profiles.processor="ESP8266"):"WEMOS D1R2"===RoboBlocks.locales.processor?(profiles.default=profiles.wemosD1R2,profiles.processor="ESP8266"):"ESP32"===RoboBlocks.locales.processor?(profiles.default=profiles.esp32,profiles.processor="ESP32"):"WEMOS D1R32"===RoboBlocks.locales.processor?(profiles.default=profiles.wemosD1R32,profiles.processor="ESP32"):"WEMOS D1R32 SHIELD"===RoboBlocks.locales.processor?(profiles.default=profiles.wemosD1R32_shield,profiles.processor="ESP32"):(profiles.default=profiles.arduinoNano,profiles.processor="ATmega328"),profiles.processor_name=RoboBlocks.locales.processor}),RoboBlocks.profiles=profiles,RoboBlocks.checkHelpUrl=function(o){var e="doc/"+roboblocksLanguage+"/"+o+".html";$.ajax({url:e,async:!1,type:"HEAD",error:function(){$found=!1,console.log("Checking "+o+" block in "+e),console.log(o+" not found")},success:function(){$found=!0}})},Blockly.findMissingDoc=function(){var o={};for(var e in this.Blocks)if(this.Blocks.hasOwnProperty(e)&&this.Blocks[e]instanceof Object&&this.Blocks[e].category){var l=this.Blocks[e].category;o[l]=o[l]||[],o[l].push(e)}function t(o){o.includes("dyor_piezo_music_end")||o.includes("dyor_piezo_music_silencio")||o.includes("dyor_piezo_music_do")||o.includes("dyor_piezo_music_re")||o.includes("dyor_piezo_music_mi")||o.includes("dyor_piezo_music_fa")||o.includes("dyor_piezo_music_sol")||o.includes("dyor_piezo_music_la")||o.includes("dyor_piezo_music_si")||!1===RoboBlocks.checkHelpUrl(o)&&o+"\n"}for(e in o)o.hasOwnProperty(e)&&o[e].forEach(t)},Blockly.getBlocks=function(){var o={};for(var e in this.Blocks)if(this.Blocks.hasOwnProperty(e)&&this.Blocks[e]instanceof Object){var l=this.Blocks[e].category,t=this.Blocks[e].subcategory;this.Blocks[e].category_colour;void 0===t&&(t="root"),o[l]=o[l]||{},o[l][t]=o[l][t]||[],o[l][t].push(e)}return o},Blockly.createToolbox=function(o){var e={},l={};for(var t in this.Blocks)if(this.Blocks.hasOwnProperty(t)&&this.Blocks[t]instanceof Object&&this.Blocks[t].category){var s=this.Blocks[t].category,i=this.Blocks[t].subcategory,_=this.Blocks[t].category_colour,n=this.Blocks[t].subsubcategory;(void 0===i?(n=i="root",o.find(function(o){return o===s})):(void 0===n&&(n="root",o.find(function(o){return o===i})),o.find(function(o){return o===i})))&&(e[s]=e[s]||{},l[s]=l[s]||_,e[s][i]=e[s][i]||[],e[s][i][n]=e[s][i][n]||[],e[s][i][n].push(t))}function a(o){c+='<block type="'+o+'"></block>'}var c='<xml id="toolbox" style="display: none">';for(s in e)if(e.hasOwnProperty(s)){for(i in c+='<category id="'+s+'" name="'+s+'" colour="'+l[s]+'">',e[s])if("root"===i&&e[s].root.root.forEach(a),"root"!==i){for(n in c+='<category id="'+i+'" name="'+i+'" colour="'+this.Blocks[e[s][i].root[0]].colour+'">',e[s][i])"root"===n&&e[s][i].root.forEach(a),"root"!==n&&(c+='<category id="'+n+'" name="'+n+'" colour="'+this.Blocks[e[s][i][n][0]].colour+'">',e[s][i][n].forEach(a),c+="</category>");c+="</category>"}c+="</category>"}return c+="</xml>"},Blockly.updateToolboxXml=function(o){var e={},l={};for(var t in this.Blocks)if(this.Blocks.hasOwnProperty(t)&&this.Blocks[t]instanceof Object&&this.Blocks[t].category){var s=this.Blocks[t].category,i=this.Blocks[t].subcategory,_=this.Blocks[t].category_colour,n=this.Blocks[t].subsubcategory;(void 0===i?(n=i="root",o.find(function(o){return o===s})):(void 0===n&&(n="root",o.find(function(o){return o===i})),o.find(function(o){return o===i})))&&(e[s]=e[s]||{},l[s]=l[s]||_,e[s][i]=e[s][i]||[],e[s][i][n]=e[s][i][n]||[],e[s][i][n].push(t))}function a(o){c+='<block type="'+o+'"></block>'}var c='<xml id="toolbox" style="display: none">';for(s in e)if(e.hasOwnProperty(s)){for(i in c+='<category id="'+s+'" name="'+s+'" colour="'+l[s]+'">',e[s])if("root"===i&&e[s].root.root.forEach(a),"root"!==i){for(n in c+='<category id="'+i+'" name="'+i+'" colour="'+this.Blocks[e[s][i].root[0]].colour+'">',e[s][i])"root"===n&&e[s][i].root.forEach(a),"root"!==n&&(c+='<category id="'+n+'" name="'+n+'" colour="'+this.Blocks[e[s][i][n][0]].colour+'">',e[s][i][n].forEach(a),c+="</category>");c+="</category>"}c+="</category>"}return c+="</xml>"},Blockly.createToolboxColours=function(){var o={};for(var e in this.Blocks)if(this.Blocks.hasOwnProperty(e)&&this.Blocks[e]instanceof Object&&this.Blocks[e].category){var l=this.Blocks[e].category;o[l]=o[l]||[],void 0!==this.Blocks[e].colour&&o[l].push(this.Blocks[e].colour)}return o},Blockly.getInstructionList=function(){var o={},e={};for(var l in this.Blocks)if(this.Blocks.hasOwnProperty(l)&&this.Blocks[l]instanceof Object&&this.Blocks[l].category){var t=this.Blocks[l].category,s=this.Blocks[l].subcategory,i=this.Blocks[l].category_colour,_=this.Blocks[l].subsubcategory;void 0===s?_=s="root":void 0===_&&(_="root"),o[t]=o[t]||{},e[t]=e[t]||i,o[t][s]=o[t][s]||[],o[t][s][_]=o[t][s][_]||[],o[t][s][_].push(l)}function n(o){a+="<li>"+o+"</li>"}var a='<ul class="instruction">';for(t in o)if(o.hasOwnProperty(t)){for(s in a+='<li id="'+t+'">'+t+"<ul>",o[t])if("root"===s&&o[t].root.root.forEach(n),"root"!==s){for(_ in a+='<li id="'+s+'">'+s+"<ul>",o[t][s])"root"===_&&o[t][s].root.forEach(n),"root"!==_&&(a+='<li id="'+_+'">'+_+"<ul>",o[t][s][_].forEach(n),a+="</li></ul>");a+="</li></ul>"}a+="</li></ul>"}return a+="</ul>"},Blockly.exportAllBlocks=function(){var o={},e=[],l=[],t=[];for(var s in this.Blocks)if(this.Blocks.hasOwnProperty(s)&&this.Blocks[s]instanceof Object&&this.Blocks[s].category){var i=this.Blocks[s].category;if(o[i]=o[i]||[],o[i].push(s),void 0!==this.Blocks[s]&&void 0!==this.Blocks[s].examples)for(example in this.Blocks[s].examples)""!==this.Blocks[s].examples[example]&&(t[this.Blocks[s].examples[example]]||(t[this.Blocks[s].examples[example]]=!0,l.push(this.Blocks[s].examples[example])))}else this.Blocks.hasOwnProperty(s)&&this.Blocks[s]instanceof Object&&e.push(s);var _,n="",a="file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/phantom_script.bat";makeTextFile=function(o){var e=new Blob([o],{type:"text/plain"});return null!==a&&window.URL.revokeObjectURL(a),a=window.URL.createObjectURL(e)};function c(o){n='<block type="'+o+'" deletable="true"></block>',_=o,document.getElementById("startBlocks").innerHTML=n,Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var e=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),l=e.width+20,t=e.height+20;A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_block.html?name="+_+" doc/"+roboblocksLanguage+"/img/"+_+".png "+l+" "+t+"\n",Blockly.getMainWorkspace().clear()}function r(_){$.ajax({type:"GET",url:_,dataType:"xml",success:function(o){var e=(new XMLSerializer).serializeToString(o);e=(e=e.replace('<xml xmlns="http://www.w3.org/1999/xhtml">',"")).replace("</xml>",""),document.getElementById("startBlocks").innerHTML=e,Blockly.mainWorkspace.clear(),Blockly.Xml.domToWorkspace(document.getElementById("startBlocks"),Blockly.getMainWorkspace());var l=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),t=l.width+20,s=l.height+20,i=_;i=(i=i.replace("bly","png")).replace("doc/examples/",""),A+="phantomjs rasterize.js file:///C:/Users/leoaran/Dropbox/DYOR/DYOR/Facilino/src/facilino/roboblocks/html/show_example.html?name="+_+" doc/"+roboblocksLanguage+"/img/"+i+" "+t+" "+s+"\n"},async:!1})}var A="";for(s in o)o.hasOwnProperty(s)&&o[s].forEach(c);for(s in e){try{c(e[s])}catch(o){}document.getElementById("startBlocks").innerHTML="",Blockly.getMainWorkspace().clear()}for(example in l)r("doc/examples/"+l[example]);return window.open(makeTextFile(A),"_blank"),n},this.JST=this.JST||{},this.JST.controls_doWhile=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="do {\n"+(null==(__t=branch)?"":__t)+"\n} while ("+(null==(__t=argument0)?"":__t)+");\n";return __p},this.JST.controls_execute=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=content)?"":__t)+"\n";return __p},this.JST.controls_else=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_elseif=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="else if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_if=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if ("+(null==(__t=argument)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }";return __p},this.JST.controls_setupLoop=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=branch)?"":__t)+"\n";return __p},this.JST.controls_whileUntil=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="while ("+(null==(__t=argument0)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.inout_analog_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_analog_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_analog_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="analogWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=value_num)?"":__t)+");\n";return __p},this.JST.inout_analog_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_builtin_led=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_builtin_led_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_digital_read=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalRead("+(null==(__t=dropdown_pin)?"":__t)+")";return __p},this.JST.inout_digital_read_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",INPUT);\n";return __p},this.JST.inout_digital_write=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="digitalWrite("+(null==(__t=dropdown_pin)?"":__t)+","+(null==(__t=dropdown_stat)?"":__t)+");\n";return __p},this.JST.inout_digital_write_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pinMode("+(null==(__t=dropdown_pin)?"":__t)+",OUTPUT);\n";return __p},this.JST.inout_highlow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=bool_value)?"":__t;return __p},this.JST.logic_compare=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.logic_negate=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="!"+(null==(__t=argument0)?"":__t);return __p},this.JST.logic_operation=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+" "+(null==(__t=operator)?"":__t)+" "+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+""+(null==(__t=operator)?"":__t)+(null==(__t=argument1)?"":__t);return __p},this.JST.math_arithmetic_pow=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="pow("+(null==(__t=argument0)?"":__t)+","+(null==(__t=argument1)?"":__t)+")";return __p},this.JST.math_modulo=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+"%"+(null==(__t=argument1)?"":__t);return __p},this.JST.math_random_bitOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned int bitOut(void)\n{\n  static unsigned long firstTime=1, prev=0;\n  unsigned long bit1=0, bit0=0, x=0, port=0, limit=99;\n  if (firstTime)\n  {\n    firstTime=0;\n    prev=analogRead(port);\n  }\n  while (limit--)\n  {\n    x=analogRead(port);\n    bit1=(prev!=x?1:0);\n    prev=x;\n    x=analogRead(port);\n    bit0=(prev!=x?1:0);\n    prev=x;\n    if (bit1!=bit0)\n      break;\n  }\n  return bit1;\n}\n";return __p},this.JST.math_random_seedOut=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="unsigned long seedOut(unsigned int noOfBits)\n{\n  unsigned long seed=0;\n  for (int i=0;i<noOfBits;++i)\n    seed = (seed<<1) | bitOut();\n  return seed;\n}\n";return __p},this.JST.math_random=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="random("+(null==(__t=value_num)?"":__t)+","+(null==(__t=value_dmax)?"":__t)+")";return __p},this.JST.procedures_callnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+");\n";return __p},this.JST.procedures_callreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=funcName)?"":__t)+"("+(null==(__t=funcArgs)?"":__t)+")";return __p},this.JST.procedures_defnoreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+" }\n";return __p},this.JST.procedures_defreturn=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=returnType)?"":__t)+" "+(null==(__t=funcName)?"":__t)+" ("+(null==(__t=args)?"":__t)+") {\n"+(null==(__t=branch)?"":__t)+"\n"+(null==(__t=returnValue)?"":__t)+" }\n";return __p},this.JST.serial_available=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="if (Serial.available()>0){\n"+(null==(__t=branch)?"":__t)+"\n}\n";return __p},this.JST.serial_setups=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="Serial.begin("+(null==(__t=bitrate)?"":__t)+");\n";return __p},this.JST.serial_special=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=null==(__t=char)?"":__t;return __p},this.JST.text_equalsIgnoreCase=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".equalsIgnoreCase("+(null==(__t=string2)?"":__t)+")";return __p},this.JST.text_length=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+".length()";return __p},this.JST.text_lower=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+".toLowerCase()";return __p},this.JST.text_upper=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=argument0)?"":__t)+".toUpperCase()";return __p},this.JST.text_substring=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=string1)?"":__t)+".substring("+(null==(__t=from)?"":__t)+","+(null==(__t=to)?"":__t)+")";return __p},this.JST.variables_set=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+=(null==(__t=varName)?"":__t)+"="+(null==(__t=varValue)?"":__t)+";\n";return __p},this.JST.wire_definitions_include=function(obj){obj||(obj={});var __t,__p="",__e=_.escape;with(obj)__p+="#include <Wire.h>";return __p};var JST=this.JST;Blockly.Blocks.procedures_defnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_defnoreturn"),examples:["procedures_callnoreturn_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_DEFNORETURN_PROCEDURE","LANG_PROCEDURES_DEFNORETURN_TOOLTIP","LANG_PROCEDURES_DEFNORETURN_DO"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var o=new Blockly.FieldTextInput("",Blockly.Procedures.rename);o.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")).appendField(o,"NAME").appendField("","PARAMS"),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_TOOLTIP")),this.arguments_=[],this.type_arguments_=[],this.setStatements_(!0),this.setInputsInline(!1)},setStatements_:function(o){this.hasStatements_!==o&&(o?(this.appendStatementInput("STACK").appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_DO")).setCheck(["code","function"]),this.getInput("RETURN")&&this.moveInputBefore("STACK","RETURN")):this.removeInput("STACK",!0),this.hasStatements_=o)},updateParams_:function(){for(var o=!1,e={},l=0;l<this.arguments_.length;l++){if(e["arg_"+this.arguments_[l].toLowerCase()]){o=!0;break}e["arg_"+this.arguments_[l].toLowerCase()]=!0}o?this.setWarningText("Duplicate argument"):this.setWarningText(null);var t=[];for(var l in this.arguments_)try{t.push(this.type_arguments_[l]+" "+this.arguments_[l])}catch(o){}this.paramString=t.join(", "),Blockly.Events.disable();try{this.setFieldValue(this.paramString,"PARAMS")}finally{Blockly.Events.enable()}},mutationToDom:function(o){var e=document.createElement("mutation");o&&e.setAttribute("name",this.getFieldValue("NAME"));for(var l=0;l<this.arguments_.length;l++){var t=document.createElement("arg_name");t.setAttribute("name",this.arguments_[l]),o&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[l]),e.appendChild(t),t=document.createElement("arg_type");try{t.setAttribute("name",this.type_arguments_[l]),o&&this.paramIds_&&t.setAttribute("paramId",this.paramIds_[l])}catch(o){}e.appendChild(t)}return this.hasStatements_||e.setAttribute("statements","false"),e},domToMutation:function(o){this.arguments_=[];for(var e,l=0;e=o.childNodes[l];l++)if("arg_name"===e.nodeName.toLowerCase()&&this.arguments_.push(e.getAttribute("name")),"arg_type"===e.nodeName.toLowerCase())try{this.type_arguments_.push(e.getAttribute("name"))}catch(o){}this.updateParams_(),Blockly.Procedures.mutateCallers(this),this.setStatements_("false"!==o.getAttribute("statements"))},decompose:function(o){var e=o.newBlock("procedures_mutatorcontainer");e.initSvg(),this.getInput("RETURN")?e.setFieldValue(this.hasStatements_?"TRUE":"FALSE","STATEMENTS"):e.getInput("STATEMENT_INPUT").setVisible(!1);for(var l=e.getInput("STACK").connection,t=0;t<this.arguments_.length;t++){var s=o.newBlock("procedures_mutatorarg");s.initSvg(),s.setFieldValue(this.type_arguments_[t],"TYPE"),s.setFieldValue(this.arguments_[t],"NAME"),s.oldLocation=t,l.connect(s.previousConnection),l=s.nextConnection}return Blockly.Procedures.mutateCallers(this),e},compose:function(o){this.arguments_=[],this.type_arguments_=[],this.paramIds_=[];for(var e=o.getInputTargetBlock("STACK");e;)this.arguments_.push(e.getFieldValue("NAME")),this.type_arguments_.push(e.getFieldValue("TYPE")),this.paramIds_.push(e.id),e=e.nextConnection&&e.nextConnection.targetBlock();this.updateParams_(),Blockly.Procedures.mutateCallers(this);var l=o.getFieldValue("STATEMENTS");if(null!==l&&(l="TRUE"==l,this.hasStatements_!=l))if(l)this.setStatements_(!0),Blockly.Mutator.reconnect(this.statementConnection_,this,"STACK"),this.statementConnection_=null;else{var t=this.getInput("STACK").connection;if(this.statementConnection_=t.targetConnection,this.statementConnection_){var s=t.targetBlock();s.unplug(),s.bumpNeighbours_()}this.setStatements_(!1)}},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!1]},getVars:function(){return this.arguments_},renameVar:function(o,e){for(var l=!1,t=0;t<this.arguments_.length;t++)Blockly.Names.equals(o,this.arguments_[t])&&(this.arguments_[t]=e,l=!0);if(l&&(this.updateParams_(),this.mutator.isVisible())){var s,i=this.mutator.workspace_.getAllBlocks();for(t=0;s=i[t];t++)"procedures_mutatorarg"==s.type&&Blockly.Names.equals(o,s.getFieldValue("NAME"))&&s.setFieldValue(e,"NAME")}},validName:function(o){if(o&&0<o.length){for(var e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(o=(o=(o=(o=(o=(o=(o=(o=o.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(var l in Blockly.Arduino.RESERVED_WORDS_){if(this.reserved_words=Blockly.Arduino.RESERVED_WORDS_.split(","),o===this.reserved_words[l]){this.setWarningText("Reserved word"),o="";break}this.setWarningText(null)}}return o},callType_:"procedures_callnoreturn",onchange:function(){if(this.last_procedure!==this.getFieldValue("NAME")){var o=this.getFieldValue("NAME");o=this.validName(o);try{this.setFieldValue(o,"NAME")}catch(o){}this.last_procedure=o}}},Blockly.Blocks.procedures_mutatorcontainer={colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_MUTATORCONTAINER_Field"],init:function(){this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORCONTAINER_Field")),this.appendStatementInput("STACK").setCheck(["code","function"]),this.appendDummyInput("STATEMENT_INPUT").appendField(Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS).appendField(new Blockly.FieldCheckbox("TRUE"),"STATEMENTS"),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1}},Blockly.Blocks.procedures_mutatorarg={colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_MUTATORARG_Field"],init:function(){var o=new Blockly.FieldTextInput("x",this.validator_);this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_MUTATORARG_Field")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"]]),"TYPE").appendField(o,"NAME"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(""),this.contextMenu=!1,o.onFinishEditing_=this.createNewVar_,o.onFinishEditing_("x")},onchange:function(){if(this.last_variable!==this.getFieldValue("NAME")){var o=this.getFieldValue("NAME");o=this.validName(o);try{this.setFieldValue(o,"NAME")}catch(o){}this.last_variable=o}},validName:Blockly.Blocks.procedures_defnoreturn.validName,validator_:function(o){return(o=o.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""))||null},createNewVar_:function(o){var e=this.sourceBlock_;e&&e.workspace&&e.workspace.options&&e.workspace.options.parentWorkspace&&e.workspace.options.parentWorkspace.createVariable(o)}},Blockly.Arduino.procedures_defnoreturn=function(){var o=this.getFieldValue("NAME"),e=Blockly.Arduino.statementToCode(this,"STACK");e=e.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e);var l=this.paramString,t=JST.procedures_defnoreturn({returnType:"void",funcName:o,args:l,branch:e});return t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[o]=t,null},Blockly.Arduino.procedures_defreturn=function(){var o=this.getFieldValue("NAME"),e=Blockly.Arduino.statementToCode(this,"STACK");e=e.replace(/&quot;/g,'"'),Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e);var l=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"",t="";if(l=l.replace(/&quot;/g,'"')){var s=RoboBlocks.findPinMode(l);l=s.code,l+="  return "+s.pin+";\n"}var i=this.getFieldValue("RETURN_TYPE"),_=this.paramString;return t+=JST.procedures_defreturn({returnType:i,funcName:o,args:_,branch:e,returnValue:l}),t=Blockly.Arduino.scrub_(this,t),Blockly.Arduino.definitions_[o]=t,null},Blockly.Blocks.procedures_defreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_defreturn"),examples:["procedures_callreturn_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_DEFRETURN_PROCEDURE","LANG_PROCEDURES_DEFRETURN_RETURN","LANG_PROCEDURES_DEFRETURN_TOOLTIP"],init:function(){var o=new Blockly.FieldTextInput("",Blockly.Procedures.rename);o.setSpellcheck(!1),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")).appendField(o,"NAME").appendField("","PARAMS"),this.appendValueInput("RETURN").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"]]),"RETURN_TYPE"),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),(this.workspace.options.comments||this.workspace.options.parentWorkspace&&this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT),this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_TOOLTIP")),this.arguments_=[],this.type_arguments_=[],this.setStatements_(!0),this.statementConnection_=null},isVariable:function(o){for(var e in Blockly.Variables.allUsedVariables)if(Blockly.Variables.allUsedVariables[e]===o)return!0;return!1},setStatements_:Blockly.Blocks.procedures_defnoreturn.setStatements_,updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,mutationToDom:Blockly.Blocks.procedures_defnoreturn.mutationToDom,domToMutation:Blockly.Blocks.procedures_defnoreturn.domToMutation,decompose:Blockly.Blocks.procedures_defnoreturn.decompose,compose:Blockly.Blocks.procedures_defnoreturn.compose,getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!0]},getVars:Blockly.Blocks.procedures_defnoreturn.getVars,renameVar:Blockly.Blocks.procedures_defnoreturn.renameVar,callType_:"procedures_callreturn"},Blockly.Arduino.procedures_ifreturn=function(){var o=Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"",e="",l=RoboBlocks.findPinMode(o);e+=l.code,e+="if ("+(o=l.pin)+") {\n";var t=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return e+=(l=RoboBlocks.findPinMode(t)).code,e+="  return ("+t+");\n",e+="}\n"},Blockly.Blocks.procedures_ifreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_ifreturn"),examples:["procedures_ifreturn_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_CONTROLS_IF_MSG_IF","LANG_PROCEDURES_DEFRETURN_RETURN","LANG_PROCEDURES_IFRETURN_TOOLTIP","LANG_PROCEDURES_IFRETURN_WARNING"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendValueInput("CONDITION").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0,"function"),this.setPreviousStatement(!0,"function"),this.setNextStatement(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var o=document.createElement("mutation");return o.setAttribute("value",Number(this.hasReturnValue_)),o},domToMutation:function(o){var e=o.getAttribute("value");this.hasReturnValue_=1===e},onchange:function(){if(this.workspace){var o=!1,e=this;do{if("procedures_defreturn"===e.type){o=!0;break}e=e.getSurroundParent()}while(e);if(o)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(o){console.log("Captured error: ",o)}}}},Blockly.Arduino.procedures_return=function(){var o="",e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";return o+=RoboBlocks.findPinMode(e).code,o+="  return ("+e+");\n"},Blockly.Blocks.procedures_return={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_return"),examples:["procedures_return_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_RETURN","LANG_PROCEDURES_RETURN_TOOLTIP","LANG_PROCEDURES_IFRETURN_WARNING"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN")),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0,"function"),this.setNextStatement(!0,"function"),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_RETURN_TOOLTIP")),this.hasReturnValue_=!0},mutationToDom:function(){var o=document.createElement("mutation");return o.setAttribute("value",Number(this.hasReturnValue_)),o},domToMutation:function(o){var e=o.getAttribute("value");this.hasReturnValue_=1===e},onchange:function(){if(this.workspace){var o=!1,e=this;do{if("procedures_defreturn"===e.type){o=!0;break}e=e.getSurroundParent()}while(e);if(o)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_IFRETURN_WARNING"))}catch(o){console.log("Captured error: ",o)}}}},Blockly.Arduino.procedures_callnoreturn=function(){var o,e=this.getFieldValue("PROCEDURES"),l=[],t="";try{for(var s=0;s<this.getVariables(e).length;s++)l[s]=Blockly.Arduino.valueToCode(this,"ARG"+s,Blockly.Arduino.ORDER_NONE)||"",t+=(o=RoboBlocks.findPinMode(l[s])).code,l[s]=o.pin}catch(o){}var i=l.join(", ");return t+=JST.procedures_callnoreturn({funcName:e,funcArgs:i})},Blockly.Blocks.procedures_callnoreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_callnoreturn"),examples:["procedures_callnoreturn_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_CALLNORETURN_TOOLTIP","LANG_PROCEDURES_DEFNORETURN_PROCEDURE","LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLNORETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.setInputsInline(!1)},validName:function(o){if(o&&0<o.length){for(var e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(o=(o=(o=(o=(o=(o=(o=(o=o.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length)}return o},getProcedures:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),e=[];if(0<o[0].length)for(var l in o[0]){var t=o[0][l][0];t=this.validName(t),e.push([t,t])}else e.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFNORETURN_PROCEDURE")]);return e},maxVariableNumber:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),e=0;if(0<o[0].length||0<o[1].length){for(var l in o[0])o[0][l][1].length>e&&(e=o[0][l][1].length);return e}[].push(["",""])},getVariables:function(o){try{var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(0<e[0].length){for(var l in e[0])if(e[0][l][0]===o)return e[0][l][1]}else[].push(["",""])}catch(o){}},exists:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(0<o[0].length))return!1;for(var e in o[0])if(o[0][e][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(o){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(o){}},addVariables:function(){var o=this.getVariables(this.getFieldValue("PROCEDURES")),e=0;if(o&&""!==this.getFieldValue("PROCEDURES")){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),o.length>=this.last_variables.length)e=o.length;else if(this.last_variables)try{e=this.last_variables.length}catch(o){}for(var l=0;l<e;l++)null===this.getInput("ARG"+l)?this.appendValueInput("ARG"+l).appendField(o[l],"ARG_NAME"+l).setAlign(Blockly.ALIGN_RIGHT):o[l]&&this.getFieldValue("ARG_NAME"+l)?this.setFieldValue(o[l],"ARG_NAME"+l):this.removeInput("ARG"+l);this.arguments_=o}},renameProcedure:function(o,e){if(this.last_procedure){var l=this.getProcedures();for(var t in l)Blockly.Names.equals(o,l[t][0])&&(this.setFieldValue(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.addVariables());this.last_procedure===o&&(this.last_procedure=e);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(o){}}},changeVariables:function(){for(var o=this.getVariables(this.getFieldValue("PROCEDURES")),e=0;e<this.maxVariableNumber()&&null!==this.getInput("ARG"+e);e++)this.removeInput("ARG"+e);for(var l in o)this.appendValueInput("ARG"+l).appendField(o[l]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=o},mutationToDom:function(){var o=document.createElement("mutation");o.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var e=0;e<this.arguments_.length;e++){var l=document.createElement("arg");l.setAttribute("name",this.arguments_[e]),o.appendChild(l)}return o},domToMutation:function(o){var e=(this.xmlElement=o).getAttribute("name");this.last_procedure=e,this.setFieldValue(e,"PROCEDURES");for(var l=0;l<o.childNodes.length;l++)this.appendValueInput("ARG"+l).appendField(o.childNodes[l].getAttribute("name"),"ARG_NAME"+l).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.procedures_callreturn=function(){for(var o,e=this.getFieldValue("PROCEDURES"),l=[],t="",s=0;s<this.getVariables(e).length;s++)l[s]=Blockly.Arduino.valueToCode(this,"ARG"+s,Blockly.Arduino.ORDER_NONE)||"null",t+=(o=RoboBlocks.findPinMode(l[s])).code,l[s]=o.pin;var i=l.join(", ");return[t+=JST.procedures_callreturn({funcName:e,funcArgs:i}),Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.procedures_callreturn={category:RoboBlocks.locales.getKey("LANG_CATEGORY_PROCEDURES"),helpUrl:RoboBlocks.getHelpUrl("procedures_callreturn"),examples:["procedures_callreturn_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_PROCEDURES,colour:RoboBlocks.LANG_COLOUR_PROCEDURES,keys:["LANG_PROCEDURES_CALLRETURN_TOOLTIP","LANG_PROCEDURES_DEFRETURN_PROCEDURE","LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALLRETURN_TOOLTIP")),this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES")),this.quarkConnections_=null,this.quarkArguments_=null,this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))},validName:function(o){if(o&&0<o.length){for(var e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(o=(o=(o=(o=(o=(o=(o=(o=o.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\?\?\ç\`\´\¨\^])/g,""),e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(var l in Blockly.Arduino.RESERVED_WORDS_){if(o===Blockly.Arduino.RESERVED_WORDS_.split(",")[l]){this.setWarningText("Reserved word"),o="";break}this.setWarningText(null)}}return o},getProcedures:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),e=[];if(0<o[1].length)for(var l in o[1]){var t=o[1][l][0];t=this.validName(t),e.push([t,t])}else e.push([RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE"),RoboBlocks.locales.getKey("LANG_PROCEDURES_DEFRETURN_PROCEDURE")]);return e},maxVariableNumber:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace),e=0;if(0<o[1].length){for(var l in o[1])o[1][l][1].length>e&&(e=o[1][l][1].length);return e}[].push(["",""])},getVariables:function(o){try{var e=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(0<e[1].length){for(var l in e[1])if(e[1][l][0]===o)return e[1][l][1]}else[].push(["",""])}catch(o){}},exists:function(){var o=Blockly.Procedures.allProcedures(Blockly.mainWorkspace);if(!(0<o[1].length))return!1;for(var e in o[1])if(o[1][e][0]===this.getFieldValue("PROCEDURES"))return!0},onchange:function(){if(this.workspace)if(this.getFieldValue("PROCEDURES")!==this.last_procedure&&this.getFieldValue("PROCEDURES")?(this.changeVariables(),this.last_procedure=this.getFieldValue("PROCEDURES"),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))):this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES")),this.last_procedure=this.getFieldValue("PROCEDURES")),this.exists())try{this.setWarningText(null)}catch(o){}else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_PROCEDURES_CALL_WITHOUT_DEFINITION"))}catch(o){}},addVariables:function(){var o=this.getVariables(this.getFieldValue("PROCEDURES")),e=0;if(o&&""!==this.getFieldValue("PROCEDURES")){if(this.last_variables||(this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))),o.length>=this.last_variables.length)e=o.length;else if(this.last_variables)try{e=this.last_variables.length}catch(o){}for(var l=0;l<e;l++)null===this.getInput("ARG"+l)?this.appendValueInput("ARG"+l).appendField(o[l],"ARG_NAME"+l).setAlign(Blockly.ALIGN_RIGHT):o[l]&&this.getFieldValue("ARG_NAME"+l)?this.setFieldValue(o[l],"ARG_NAME"+l):this.removeInput("ARG"+l);this.arguments_=o}},renameProcedure:function(o,e){if(this.last_procedure){var l=this.getProcedures();for(var t in l)Blockly.Names.equals(o,l[t][0])&&this.setFieldValue(new Blockly.FieldDropdown(this.getProcedures()),"PROCEDURES");this.last_procedure===o&&(this.last_procedure=e);try{this.setFieldValue(this.last_procedure,"PROCEDURES")}catch(o){}}},changeVariables:function(){for(var o=this.getVariables(this.getFieldValue("PROCEDURES")),e=0;e<this.maxVariableNumber()&&null!==this.getInput("ARG"+e);e++)this.removeInput("ARG"+e);for(var l in o)this.appendValueInput("ARG"+l).appendField(o[l]).setAlign(Blockly.ALIGN_RIGHT);this.arguments_=o},mutationToDom:function(){var o=document.createElement("mutation");o.setAttribute("name",this.getFieldValue("PROCEDURES")),void 0===this.arguments_&&(this.arguments_=this.getVariables(this.getFieldValue("PROCEDURES"))),void 0===this.arguments_&&(this.arguments_=[]);for(var e=0;e<this.arguments_.length;e++){var l=document.createElement("arg");l.setAttribute("name",this.arguments_[e]),o.appendChild(l)}return o},domToMutation:function(o){var e=(this.xmlElement=o).getAttribute("name");this.last_procedure=e,this.setFieldValue(e,"PROCEDURES");for(var l=0;l<o.childNodes.length;l++)this.appendValueInput("ARG"+l).appendField(o.childNodes[l].getAttribute("name"),"ARG_NAME"+l).setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Arduino.controls_doWhile=function(){var o=Blockly.Arduino.valueToCode(this,"WHILE",Blockly.Arduino.ORDER_NONE)||"";o=o.replace(/&quot;/g,'"');var e=Blockly.Arduino.statementToCode(this,"DO");e=e.replace(/&quot;/g,'"');var l="";return Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e),"UNTIL"===this.getFieldValue("MODE")&&(o.match(/^\w+$/)||(o="("+o+")"),o="!"+o),l+=JST.controls_doWhile({argument0:o,branch:e})},Blockly.Blocks.controls_doWhile={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_doWhile"),examples:["controls_doWhile_example1.bly","controls_doWhile_example2.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_DOWHILE_OPERATOR_DO","LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE","LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL","LANG_CONTROLS_DOWHILE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_OPERATOR_DO")).setCheck("code"),this.appendValueInput("WHILE").setCheck(Boolean).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_TOOLTIP"))}},Blockly.Arduino.controls_flow_statements=function(){switch(this.getFieldValue("FLOW")){case"BREAK":return"break;\n";case"CONTINUE":return"continue;\n"}throw"Unknown flow statement."},Blockly.Blocks.controls_flow_statements={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_flow_statements"),examples:["controls_flow_statements_example1.bly","controls_flow_statements_example2.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK","LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE","LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP","LANG_CONTROLS_FLOW_STATEMENTS_WARNING","LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK","LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL);var o=new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK")||"BREAK","BREAK"],[RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE")||"CONTINUE","CONTINUE"]]);this.appendDummyInput().appendField(o,"FLOW").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP")),this.setPreviousStatement(!0,"code");this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"))},onchange:function(){if(this.workspace){var o=!1,e=this;do{if("controls_repeat"===e.type||"controls_forEach"===e.type||"controls_for"===e.type||"controls_whileUntil"===e.type){o=!0;break}e=e.getSurroundParent()}while(e);if(o)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FLOW_STATEMENTS_WARNING"))}catch(o){console.log("Captured error: ",o)}}}},Blockly.Arduino.controls_repeat=function(){var o=this.getFieldValue("TO"),e=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e);var l="";return a=RoboBlocks.findPinMode(o),l+=a.code,l+="for (int _repeat_iter=1; _repeat_iter<="+(o=a.pin)+";_repeat_iter++) {\n"+e+"}\n"},Blockly.Blocks.controls_repeat={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_repeat"),examples:["controls_for_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_REPEAT","LANG_CONTROLS_REPEAT_TIMES","LANG_CONTROLS_REPEAT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT")).appendField(new Blockly.FieldNumber("4","1","32767"),"TO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT_TIMES")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_DO")).setCheck("code"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT_TOOLTIP"))}},Blockly.Arduino.controls_for=function(){var o=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",e=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"",l=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"",t=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(t=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+t);var s="",i=RoboBlocks.findPinMode(o);s+=i.code,o=i.pin,s+=(i=RoboBlocks.findPinMode(e)).code,e=i.pin,s+=(i=RoboBlocks.findPinMode(l)).code,l=i.pin;var _=this.getInputTargetBlock("FROM"),n=this.getInputTargetBlock("TO");if(_&&n){var a=this.getInputTargetBlock("FROM").type,c=this.getInputTargetBlock("TO").type;if("variables_get"==a&&"math_number"==c)var r=!1;else if("math_number"==a&&"variables_get"==c)r=!0;else if("math_number"==a&&"math_number"==c)r=parseFloat(e)<=parseFloat(l);else r=parseFloat(e)<=parseFloat(l);s+="for ("+o+" = "+e+"; "+o+(r?" <= ":" >= ")+l+"; "+o+(r?"++":"--")+") {\n"+t+"}\n"}return s},Blockly.Blocks.controls_for={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_for"),examples:["controls_for_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_FOR_INPUT_WITH","LANG_CONTROLS_FOR_INPUT_FROM","LANG_CONTROLS_FOR_INPUT_TO","LANG_CONTROLS_FOR_INPUT_DO"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_WITH")),this.appendValueInput("FROM").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_FROM")),this.appendValueInput("TO").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_TO")),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_INPUT_DO")).setCheck("code"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},onchange:function(){var o=this.getInputTargetBlock("FROM"),e=this.getInputTargetBlock("TO");if(o&&e){var l=o.type,t=e.type;"variables_get"==l&&"math_number"==t?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_LOOP_WARNING1")):"math_number"==l&&"variables_get"==t?this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_LOOP_WARNING2")):"math_number"==l&&"math_number"==t?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_LOOP_WARNING3"))}else this.setWarningText(RoboBlocks.locales.getKey("LANG_CONTROLS_FOR_LOOP_WARNING4"))},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setTitleValue(e,"VAR")}},Blockly.Arduino.controls_if=function(){var o=0,e=Blockly.Arduino.valueToCode(this,"IF"+o,Blockly.Arduino.ORDER_NONE);e=e.replace(/&quot;/g,'"');var l=Blockly.Arduino.statementToCode(this,"DO"+o),t="",s=RoboBlocks.findPinMode(e);for(t+=s.code,e=s.pin,t+=JST.controls_if({argument:e,branch:l}),o=1;o<=this.elseifCount_;o++)e=Blockly.Arduino.valueToCode(this,"IF"+o,Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.statementToCode(this,"DO"+o),t+=JST.controls_elseif({argument:e,branch:l});return this.elseCount_&&(l=Blockly.Arduino.statementToCode(this,"ELSE"),t+=JST.controls_else({argument:e,branch:l})),l=l.replace(/&quot;/g,'"'),(t=t.replace(/&quot;/g,'"'))+"\n"},Blockly.Blocks.controls_if={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_if"),examples:["controls_if_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_IF_MSG_IF","LANG_CONTROLS_IF_MSG_THEN","LANG_CONTROLS_IF_TOOLTIP_1","LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF","LANG_CONTROLS_IF_MSG_THEN","LANG_CONTROLS_IF_ELSE_Field_ELSE"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_IF")),this.appendStatementInput("DO0").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT).setCheck("code"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_TOOLTIP_1")),this.elseifCount_=0,this.elseCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var o=document.createElement("mutation");return this.elseifCount_&&o.setAttribute("elseif",this.elseifCount_),this.elseCount_&&o.setAttribute("else",1),o},domToMutation:function(o){this.elseifCount_=window.parseInt(o.getAttribute("elseif"),10),this.elseCount_=window.parseInt(o.getAttribute("else"),10);for(var e=1;e<=this.elseifCount_;e++)this.appendValueInput("IF"+e).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF")),this.appendStatementInput("DO"+e).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT).setCheck("code");this.elseCount_&&(this.appendDummyInput("ELSE_LABEL").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_Field_ELSE")),this.appendStatementInput("ELSE").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT).setCheck("code"))},decompose:function(o){var e=o.newBlock("controls_if_if");e.initSvg();for(var l=e.getInput("STACK").connection,t=1;t<=this.elseifCount_;t++){var s=o.newBlock("controls_if_elseif");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}if(this.elseCount_){var i=o.newBlock("controls_if_else");i.initSvg(),l.connect(i.previousConnection)}return e},compose:function(o){this.elseCount_&&(this.removeInput("ELSE_LABEL"),this.removeInput("ELSE")),this.elseCount_=0;for(var e=this.elseifCount_;0<e;e--)this.removeInput("IF"+e),this.removeInput("DO"+e);this.elseifCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){switch(l.type){case"controls_if_elseif":this.elseifCount_++;var t=this.appendValueInput("IF"+this.elseifCount_).setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF")),s=this.appendStatementInput("DO"+this.elseifCount_).setCheck("code");s.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),l.valueConnection_&&t.connection.connect(l.valueConnection_),l.statementConnection_&&s.connection.connect(l.statementConnection_);break;case"controls_if_else":this.elseCount_++,this.appendDummyInput("ELSE_LABEL").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_Field_ELSE"));var i=this.appendStatementInput("ELSE").setCheck("code");i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),l.statementConnection_&&i.connection.connect(l.statementConnection_);break;default:throw"Unknown block type."}l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=1;e;){switch(e.type){case"controls_if_elseif":var t=this.getInput("IF"+l),s=this.getInput("DO"+l);e.valueConnection_=t&&t.connection.targetConnection,e.statementConnection_=s&&s.connection.targetConnection,l++;break;case"controls_if_else":s=this.getInput("ELSE"),e.statementConnection_=s&&s.connection.targetConnection;break;default:throw"Unknown block type."}e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.controls_if_if={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_IF_IF_Field_IF","LANG_CONTROLS_IF_IF_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_Field_IF")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK").setCheck("if"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_IF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_elseif={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF","LANG_CONTROLS_IF_ELSEIF_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"if"),this.setNextStatement(!0,"if"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSEIF_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.controls_if_else={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_IF_ELSE_Field_ELSE","LANG_CONTROLS_IF_ELSE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_Field_ELSE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"if"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_ELSE_TOOLTIP")),this.contextMenu=!1}};var indentSentences=function(o){var e=o.split("\n"),l="";for(var t in e)l+="  "+e[t]+"\n";return l};return Blockly.Arduino.controls_switch=function(){var o=0,e=Blockly.Arduino.valueToCode(this,"IF0",Blockly.Arduino.ORDER_NONE)||"",l=Blockly.Arduino.statementToCode(this,"DO"+o);l=indentSentences(l);var t="",s=RoboBlocks.findPinMode(e);for(t+=s.code,t+="switch ("+(e=s.pin)+")\n{",o=1;o<=this.switchCount_;o++)e=Blockly.Arduino.valueToCode(this,"SWITCH"+o,Blockly.Arduino.ORDER_NONE)||"",l=Blockly.Arduino.statementToCode(this,"DO"+o),t+=" \n  case "+e+": \n  {\n"+(l=(l=indentSentences(l)).substring(0,l.length-1))+"  break;\n  }";return this.defaultCount_&&(l=Blockly.Arduino.statementToCode(this,"DEFAULT"),t+="  \n  default:\n  {\n"+(l=(l=indentSentences(l)).substring(0,l.length-1))+"}"),t+"\n}\n"},Blockly.Blocks.controls_switch={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_switch"),examples:["controls_switch_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_SWITCH","LANG_CONTROLS_SWITCH_CASE","LANG_CONTROLS_IF_MSG_THEN","LANG_CONTROLS_SWITCH_DEFAULT","LANG_CONTROLS_SWITCH_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setMutator(new Blockly.Mutator(["controls_switch_case","controls_switch_default"]));this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_TOOLTIP")),this.defaultCount_=0},mutationToDom:function(){if(!this.switchCount_&&!this.defaultCount_)return null;var o=document.createElement("mutation");return this.switchCount_&&o.setAttribute("case",this.switchCount_),this.defaultCount_&&o.setAttribute("default",1),o},domToMutation:function(o){this.switchCount_=window.parseInt(o.getAttribute("case"),10),this.defaultCount_=window.parseInt(o.getAttribute("default"),10);for(var e=1;e<=this.switchCount_;e++)this.appendValueInput("SWITCH"+e).setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.appendStatementInput("DO"+e).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT).setCheck("code");this.defaultCount_&&this.appendStatementInput("DEFAULT").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT).setCheck("code")},decompose:function(o){var e=o.newBlock("controls_switch_switch");e.initSvg();for(var l=e.getInput("STACK").connection,t=1;t<=this.switchCount_;t++){var s=o.newBlock("controls_switch_case");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}if(this.defaultCount_){var i=o.newBlock("controls_switch_default");i.initSvg(),l.connect(i.previousConnection)}return e},compose:function(o){this.defaultCount_&&this.removeInput("DEFAULT"),this.defaultCount_=0;for(var e=this.switchCount_;0<e;e--)this.removeInput("SWITCH"+e),this.removeInput("DO"+e);this.switchCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){switch(l.type){case"controls_switch_case":var t;this.switchCount_++,t=RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE");var s=this.appendValueInput("SWITCH"+this.switchCount_).setCheck(Number).appendField(t).setAlign(Blockly.ALIGN_RIGHT);this.setInputsInline(!0);var i=this.appendStatementInput("DO"+this.switchCount_).setCheck("code");i.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_IF_MSG_THEN")).setAlign(Blockly.ALIGN_RIGHT),l.valueConnection_&&s.connection.connect(l.valueConnection_),l.statementConnection_&&i.connection.connect(l.statementConnection_);break;case"controls_switch_default":this.defaultCount_++;var _=this.appendStatementInput("DEFAULT").setCheck("code");_.appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),l.statementConnection_&&_.connection.connect(l.statementConnection_);break;default:throw"Unknown block type."}l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=1;e;){switch(e.type){case"controls_switch_case":var t=this.getInput("SWITCH"+l),s=this.getInput("DO"+l);e.valueConnection_=t&&t.connection.targetConnection,e.statementConnection_=s&&s.connection.targetConnection,l++;break;case"controls_switch_default":s=this.getInput("DEFAULT"),e.statementConnection_=s&&s.connection.targetConnection;break;default:throw"Unknown block type."}e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.controls_switch_switch={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_SWITCH"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK").setCheck("switch"),this.setTooltip("Switch"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_case={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_SWITCH_CASE"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_CASE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"switch"),this.setNextStatement(!0,"switch"),this.setTooltip("Switch case"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_default={colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_SWITCH_DEFAULT"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SWITCH_DEFAULT")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"switch"),this.setTooltip("Switch default"),this.contextMenu=!1}},Blockly.Arduino.controls_whileUntil=function(){var o=Blockly.Arduino.valueToCode(this,"BOOL",Blockly.Arduino.ORDER_NONE)||"";o=o.replace(/&quot;/g,'"');var e=Blockly.Arduino.statementToCode(this,"DO");e=e.replace(/&quot;/g,'"');var l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e),"UNTIL"===this.getFieldValue("MODE")&&(o.match(/^\w+$/)||(o="("+o+")"),o="!"+o),l+=JST.controls_whileUntil({argument0:o,branch:e})},Blockly.Blocks.controls_whileUntil={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_whileUntil"),examples:["controls_whileUntil_example.bly","controls_whileUntil1_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE","LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL","LANG_CONTROLS_DOWHILE_OPERATOR_DO","LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE","LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("BOOL").setCheck(Boolean).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE"),"WHILE"],[RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"),"UNTIL"]]),"MODE"),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_DOWHILE_OPERATOR_DO")),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code");this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"))}},Blockly.Arduino.inout_analog_read=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,RoboBlocks.isVariable(o)?e+=JST.inout_analog_read_setups({dropdown_pin:o}):Blockly.Arduino.setups_["setup_green_analog_read"+o]=JST.inout_analog_read_setups({dropdown_pin:o}),[e+=JST.inout_analog_read({dropdown_pin:o}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_analog_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ANALOG"),helpUrl:RoboBlocks.getHelpUrl("inout_analog_read"),examples:["inout_analog_read_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_ANALOG,keys:["LANG_ADVANCED_INOUT_ANALOG_READ","LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_ANALOG),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",20*options.zoom,20*options.zoom)).setCheck(["ANALOG_PIN",Number]),this.setOutput(!0,Number),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP"))}},Blockly.Arduino.base_delay=function(){var o=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,e+="delay("+(o=l.pin)+");\n"},Blockly.Blocks.base_delay={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("base_delay"),examples:["base_delay_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_BASE_DELAY_WAIT","LANG_CONTROLS_BASE_DELAY_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_WAIT")).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_TOOLTIP"))}},Blockly.Arduino.base_delay_sec=function(){var o=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,e+="delay(1000*"+(o=l.pin)+");\n"},Blockly.Blocks.base_delay_sec={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("base_delay_sec"),examples:["base_delay_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_BASE_DELAY_WAIT_SEC","LANG_CONTROLS_BASE_DELAY_SEC_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_WAIT_SEC")).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_DELAY_SEC_TOOLTIP"))}},Blockly.Arduino.base_millis=function(){return["millis()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_millis={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("base_millis"),category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,examples:["base_us_example.bly"],keys:["LANG_CONTROLS_BASE_MILLIS","LANG_CONTROLS_BASE_MILLIS_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_MILLIS")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_MILLIS_TOOLTIP"))}},Blockly.Arduino.base_us=function(){return["micros()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_us={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("base_us"),category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,examples:["base_us_example.bly"],keys:["LANG_CONTROLS_BASE_US","LANG_CONTROLS_BASE_US_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BASE_US_TOOLTIP"))}},Blockly.Blocks.dyor_controls_wait=[],Blockly.Blocks.controls_every=[],Blockly.Blocks.controls_every_container=[],Blockly.Blocks.controls_every_item=[],"ESP32"!==profiles.processor&&"ESP8266"!==profiles.processor||(Blockly.Blocks.ESP_deep_sleep=[]),Blockly.Arduino.controls_setupLoop=function(){var o=Blockly.Arduino.statementToCode(this,"SETUP");o=o.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_int0_&&(o+=Blockly.Arduino.setups_.setup_int0_),Blockly.Arduino.setups_.X_SETUP=JST.controls_setupLoop({branch:o});var e=Blockly.Arduino.statementToCode(this,"LOOP");return Blockly.Arduino.loops_.loop_thingsboard&&(e+=Blockly.Arduino.loops_.loop_thingsboard),e=e.replace(/&quot;/g,'"'),e=JST.controls_setupLoop({branch:e})},Blockly.Blocks.controls_setupLoop={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_setupLoop"),examples:["controls_setupLoop_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE","LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE","LANG_CONTROLS_SETUP_LOOP_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendStatementInput("SETUP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_SETUP_TITLE")).setCheck("code"),this.appendStatementInput("LOOP").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_LOOP_TITLE")).setCheck("code"),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_SETUP_LOOP_TOOLTIP"))}},Blockly.Arduino.controls_comment=function(){return"//"+this.getFieldValue("COMMENT")+"\n"},Blockly.Blocks.controls_comment={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_block"),examples:["controls_setupLoop_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_COMMENT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField("//").appendField(new Blockly.FieldTextInput(""),"COMMENT"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_COMMENT_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.controls_block=function(){return Blockly.Arduino.statementToCode(this,"BLOCK")},Blockly.Blocks.controls_block={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_block"),examples:["controls_setupLoop_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_BLOCK","LANG_CONTROLS_BLOCK_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_BLOCK")),this.appendStatementInput("BLOCK").setCheck("code"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_BLOCK_TOOLTIP"))},onchange:function(){null===this.getInputTargetBlock("BLOCK")&&this.getInput("BLOCK").connection.connect(this.workspace.newBlock("controls_comment").previousConnection)}},Blockly.Arduino.advanced_map=function(){var o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"FROM_MIN",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"FROM_MAX",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"TO_MIN",Blockly.Arduino.ORDER_NONE),s=Blockly.Arduino.valueToCode(this,"TO_MAX",Blockly.Arduino.ORDER_NONE),i="",_=RoboBlocks.findPinMode(o);return i+=_.code,o=_.pin,i+=(_=RoboBlocks.findPinMode(e)).code,e=_.pin,i+=(_=RoboBlocks.findPinMode(l)).code,l=_.pin,i+=(_=RoboBlocks.findPinMode(t)).code,t=_.pin,i+=(_=RoboBlocks.findPinMode(s)).code,[i+="map("+o+","+e+","+l+","+t+","+(s=_.pin)+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("advanced_map"),examples:["advanced_map_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_ADVANCED_MAP_MAP","LANG_MATH_ADVANCED_MAP_FROM","LANG_MATH_ADVANCED_MAP_HYPHEN","LANG_MATH_ADVANCED_MAP_BRACKET","LANG_MATH_ADVANCED_MAP_TO","LANG_MATH_ADVANCED_MAP_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_MAP")).setCheck(Number),this.appendValueInput("FROM_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_FROM")).setCheck(Number),this.appendValueInput("FROM_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.appendValueInput("TO_MIN",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TO")).setCheck(Number),this.appendValueInput("TO_MAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_HYPHEN")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ADVANCED_MAP_TOOLTIP"))}},Blockly.Arduino.base_map=function(){var o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=(t=RoboBlocks.findPinMode(e)).code,e=t.pin,"ESP32"===profiles.processor?l+="map("+o+",0,4095,0,"+e+")":l+="map("+o+",0,1023,0,"+e+")",[l,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.base_map={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("base_map"),examples:["base_map_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_BASE_MAP","LANG_MATH_BASE_MAP_VALUE_TO","LANG_MATH_BASE_MAP_BRACKET","LANG_MATH_BASE_MAP_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_VALUE_TO")).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_BRACKET")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_BASE_MAP_TOOLTIP"))}},Blockly.Arduino.inout_analog_write=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC),l="";if("ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor||"ESP8266"===profiles.processor){var t=RoboBlocks.findPinMode(o);l+=t.code,o=t.pin;var s=RoboBlocks.findPinMode(e);l+=s.code,e=s.pin,RoboBlocks.isVariable(o)?l+=JST.inout_analog_write_setups({dropdown_pin:o,value_num:e}):Blockly.Arduino.setups_["setup_analog_write"+o]=JST.inout_analog_write_setups({dropdown_pin:o,value_num:e}),l+=JST.inout_analog_write({dropdown_pin:o,value_num:e})}else if("ESP32"===profiles.processor){var i=this.getFieldValue("FREQ"),_=this.getFieldValue("RES");Facilino.PWMChannelsIDs[this.id]=o;var n=[];this.uniqueVariables=[],$.each(Object.values(Facilino.PWMChannelsIDs),function(o,e){-1===$.inArray(e,n)&&n.push(e)});var a=n.indexOf(o);Blockly.Arduino.setups_["ledc_"+o]="ledcSetup("+a+","+i+","+_+");\n  ledcAttachPin("+o+","+a+");\n",l+="ledcWrite("+a+","+e+");\n"}return l},Blockly.Blocks.inout_analog_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ANALOG"),helpUrl:RoboBlocks.getHelpUrl("inout_analog_write"),examples:["inout_analog_write_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_ANALOG,keys:["LANG_ADVANCED_INOUT_ANALOG_WRITE","LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE","LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_ANALOG),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE")).appendField(new Blockly.FieldImage("img/blocks/pwm_signal.svg",20*options.zoom,20*options.zoom)).setCheck(["PWM_PIN",Number]),"ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ESP8266"===profiles.processor?this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE")).setCheck(Number):"ESP32"===profiles.processor&&this.appendValueInput("NUM",Number).appendField(new Blockly.FieldNumber(1e3,0,4e7),"FREQ").appendField("Hz").appendField(new Blockly.FieldNumber(8,1,16),"RES").appendField("bits").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE")).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_builtin_led=function(){var o=this.getFieldValue("STAT"),e="",l=profiles.default.builtin;return Blockly.Arduino.setups_["setup_green_led_"+l]=JST.inout_builtin_led_setups({pin:l}),"TOGGLE"===o?e+="digitalWrite("+l+",!digitalRead("+l+"));\n":e=JST.inout_builtin_led({pin:l,dropdown_stat:o}),e},Blockly.Blocks.inout_builtin_led={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("inout_builtin_led"),examples:["inout_builtin_led_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_ADVANCED_BUILTIN_LED","LANG_ADVANCED_BUILTIN_LED_ON","LANG_ADVANCED_BUILTIN_LED_OFF","LANG_ADVANCED_BUILTIN_LED_TOGGLE","LANG_ADVANCED_BUILTIN_LED_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED")).appendField(new Blockly.FieldImage("img/blocks/diode.png",24*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_STATE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_ON")||"ON","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_OFF")||"OFF","LOW"],[RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOGGLE")||"TOGGLE","TOGGLE"]]),"STAT"),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_BUILTIN_LED_TOOLTIP"))}},Blockly.Arduino.inout_digital_read=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,RoboBlocks.isVariable(o)?e+=JST.inout_digital_read_setups({dropdown_pin:o}):Blockly.Arduino.setups_["setup_green_digital_read"+o]=JST.inout_digital_read_setups({dropdown_pin:o}),[e+=JST.inout_digital_read({dropdown_pin:o}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_digital_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("inout_digital_read"),examples:["inout_digital_read_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_ADVANCED_INOUT_DIGITAL_READ","LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",20*options.zoom,20*options.zoom)).setCheck(["DIGITAL_PIN",Number]),this.setOutput(!0,Boolean),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP"))}},Blockly.Arduino.inout_digital_write=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"STAT",Blockly.Arduino.ORDER_ATOMIC),l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,RoboBlocks.isVariable(o)?l+=JST.inout_digital_write_setups({dropdown_pin:o}):Blockly.Arduino.setups_["setup_digital_write_"+o]=JST.inout_digital_write_setups({dropdown_pin:o}),l+=JST.inout_digital_write({dropdown_pin:o,dropdown_stat:e})},Blockly.Blocks.inout_digital_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("inout_digital_write"),examples:["inout_digital_read_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_ADVANCED_INOUT_DIGITAL_WRITE","LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN","LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE","LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",20*options.zoom,20*options.zoom)).setCheck(["DIGITAL_PIN",Number]),this.appendValueInput("STAT").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"code"),this.setInputsInline(!0),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP"))}},Blockly.Arduino.inout_digital_mode=function(){return"pinMode("+Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE)+","+this.getFieldValue("MODE")+");"},Blockly.Blocks.inout_digital_mode={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("inout_digital_mode"),examples:["inout_digital_mode_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_ADVANCED_INOUT_DIGITAL_MODE","LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN","LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE","LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT","LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT","LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE")).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",20*options.zoom,20*options.zoom)).setCheck(["DIGITAL_PIN",Number]),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_MODE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_OUTPUT")||"OUTPUT","OUTPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_INPUT")||"INPUT","INPUT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_PULLUP")||"PULLUP","INPUT_PULLUP"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"code"),this.setInputsInline(!0),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_INOUT_DIGITAL_MODE_TOOLTIP"))}},Blockly.Arduino.inout_highlow=function(){var o=this.getFieldValue("BOOL");return[JST.inout_highlow({bool_value:o}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_highlow={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("inout_highlow"),tags:["input","output"],examples:["inout_highlow_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_ADVANCED_HIGHLOW_HIGH","LANG_ADVANCED_HIGHLOW_LOW","LANG_ADVANCED_HIGHLOW_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_HIGH")||"HIGH","HIGH"],[RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_LOW")||"LOW","LOW"]]),"BOOL"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_HIGHLOW_TOOLTIP"))}},Blockly.Arduino.lcd_def=function(){return Blockly.Arduino.definitions_.define_wire="#include <Wire.h>",Blockly.Arduino.definitions_.define_liquid_crystals="#include <LiquidCrystal.h>",Blockly.Arduino.definitions_.declare_var_LCD="LiquidCrystal _lcd("+this.getFieldValue("LCD_1")+","+this.getFieldValue("LCD_2")+","+this.getFieldValue("LCD_3")+","+this.getFieldValue("LCD_4")+","+this.getFieldValue("LCD_5")+","+this.getFieldValue("LCD_6")+");\n",Blockly.Arduino.setups_.setup_lcd="_lcd.begin(16, 2);\n  _lcd.clear();\n",""},Blockly.Blocks.lcd_def={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),tags:["lcd","screen"],helpUrl:RoboBlocks.getHelpUrl("lcd_def"),examples:["lcd_def_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_DEF","LANG_LCD_PINS","LANG_LCD_DEF_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_DEF")).appendField("RS").appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_1").appendField("EN").appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_2").appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PINS")).appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_3").appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_4").appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_5").appendField(new Blockly.FieldDropdown(profiles.default.digital),"LCD_6").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_DEF_TOOLTIP"))},isNotDuplicable:!0},Blockly.Arduino.lcd_def1=function(){return Blockly.Arduino.definitions_.define_liquid_crystals1="#include <LiquidCrystal_I2C.h>",Blockly.Arduino.definitions_.declare_var_LCD="LiquidCrystal_I2C _lcd(0x27,16,2);\n",Blockly.Arduino.setups_.setup_lcd="_lcd.init();\n  _lcd.clear();\n",""},Blockly.Blocks.lcd_def1={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),tags:["lcd","screen"],helpUrl:RoboBlocks.getHelpUrl("lcd_def1"),examples:["lcd_def_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_DEF1","LANG_LCD_DEF_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_DEF1")).appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_DEF1_TOOLTIP"))},isNotDuplicable:!0},Blockly.Arduino.lcd_clear=function(){return"_lcd.clear();\n"},Blockly.Blocks.lcd_clear={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),tags:["lcd","screen"],helpUrl:RoboBlocks.getHelpUrl("lcd_clear"),examples:["lcd_clear_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_CLEAR","LANG_LCD_CLEAR_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_CLEAR")).appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_CLEAR_TOOLTIP"))},onchange:function(){void 0===Blockly.getMainWorkspace().getAllBlocks().find(function(o){return"lcd_def"==o.type||"lcd_def1"==o.type})?this.setWarningText("This block instruction requires to define the LCD pin connections"):this.setWarningText(null)}},Blockly.Arduino.lcd_print=function(){var o=Blockly.Arduino.valueToCode(this,"VAL",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(this,"XCOOR",Blockly.Arduino.ORDER_ATOMIC),l=Blockly.Arduino.valueToCode(this,"YCOOR",Blockly.Arduino.ORDER_ATOMIC),t="";return"TRUE"===this.getFieldValue("POS")&&(t+="_lcd.setCursor("+l+","+e+");\n"),t=(t+="_lcd.print("+o+");\n").replace(/&quot;/g,'"')},Blockly.Blocks.lcd_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),tags:["lcd","screen"],helpUrl:RoboBlocks.getHelpUrl("lcd_print"),examples:["lcd_print_example1.bly","lcd_print_example2.bly"],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_PRINT","LANG_LCD_PRINT_POSITION","LANG_LCD_PRINT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendValueInput("VAL").appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT")).appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_PRINT_POSITION")).appendField(new Blockly.FieldCheckbox("FALSE"),"POS").setAlign(Blockly.ALIGN_RIGHT),this.last_pos=this.getFieldValue("POS"),this.getPosition(),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_PRINT_TOOLTIP"))},getPosition:function(){try{this.removeInput("XCOOR"),this.removeInput("YCOOR")}catch(o){}"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField(RoboBlocks.locales.getKey("LANG_LCD_ROW")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField(RoboBlocks.locales.getKey("LANG_LCD_COLUMN")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT))},onchange:function(){this.getFieldValue("POS")!==this.last_pos&&(this.getPosition(),this.last_pos=this.getFieldValue("POS")),this.last_pos=this.getFieldValue("POS"),void 0===Blockly.getMainWorkspace().getAllBlocks().find(function(o){return"lcd_def"==o.type||"lcd_def1"==o.type})?this.setWarningText("This block instruction requires to define the LCD pin connections"):this.setWarningText(null)},mutationToDom:function(){var o=document.createElement("mutation");return"TRUE"===this.getFieldValue("POS")?o.setAttribute("fixed",!0):"FALSE"===this.getFieldValue("POS")&&o.setAttribute("fixed",!1),o},domToMutation:function(o){this.setFieldValue(o.getAttribute("fixed"),"POS"),"TRUE"===this.getFieldValue("POS")&&(this.appendValueInput("XCOOR").appendField(RoboBlocks.locales.getKey("LANG_LCD_ROW")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("YCOOR").appendField(RoboBlocks.locales.getKey("LANG_LCD_COLUMN")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT))}},Blockly.Blocks.lcd_scroll={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),tags:["lcd","screen"],helpUrl:RoboBlocks.getHelpUrl("lcd_print_scroll"),examples:[],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_SCROLL","LANG_LCD_PRINT_POSITION","LANG_LCD_SCROLL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendValueInput("VAL").appendField(RoboBlocks.locales.getKey("LANG_LCD_SCROLL")).appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.appendValueInput("DELAY_TIME").appendField(RoboBlocks.locales.getKey("LANG_LCD_DELAY_TIME")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("XCOOR").appendField(RoboBlocks.locales.getKey("LANG_LCD_ROW")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_SCROLL_TOOLTIP"))},onchange:function(){void 0===Blockly.getMainWorkspace().getAllBlocks().find(function(o){return"lcd_def"==o.type||"lcd_def1"==o.type})?this.setWarningText("This block instruction requires to define the LCD pin connections"):this.setWarningText(null)}},Blockly.Arduino.lcd_scroll=function(){var o=Blockly.Arduino.valueToCode(this,"VAL",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),l=Blockly.Arduino.valueToCode(this,"XCOOR",Blockly.Arduino.ORDER_ATOMIC),t="";return Blockly.Arduino.definitions_.define_lcd_scroll='void scrollText(int row, String message, int delayTime, int lcdColumns) {\n  for (int i=0; i < lcdColumns; i++) {\n    message = " " + message;\n   }\n   message = message + " ";\n  for (int pos = 0; pos < message.length(); pos++) {\n    _lcd.setCursor(0, row);\n    _lcd.print(message.substring(pos, pos + lcdColumns));\n    delay(delayTime);\n  }\n}\n',t=(t+="scrollText("+l+","+o+","+e+",16);\n").replace(/&quot;/g,'"')},Blockly.Arduino.lcd_setBacklight=function(){return"_lcd.setBacklight("+this.getFieldValue("STATE")+");\n"},Blockly.Blocks.lcd_setBacklight={category:RoboBlocks.locales.getKey("LANG_CATEGORY_SCREEN"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_LCD"),helpUrl:RoboBlocks.getHelpUrl("lcd_setBacklight"),tags:["lcd","screen"],examples:["lcd_setBacklight_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_SCREEN,colour:RoboBlocks.LANG_COLOUR_SCREEN_LCD,keys:["LANG_LCD_SETBACKLIGHT","LANG_LCD_SETBACKLIGHT_CLOSE","LANG_LCD_SETBACKLIGHT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SCREEN_LCD),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT")).appendField(new Blockly.FieldDropdown([["LOW","LOW"],["HIGH","HIGH"]]),"STATE").appendField(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_CLOSE")).appendField(new Blockly.FieldImage("img/blocks/lcd.svg",52*options.zoom,24*options.zoom)),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LCD_SETBACKLIGHT_TOOLTIP"))},onchange:function(){void 0===Blockly.getMainWorkspace().getAllBlocks().find(function(o){return"lcd_def"==o.type||"lcd_def1"==o.type})?this.setWarningText("This block instruction requires to define the LCD pin connections"):this.setWarningText(null)}},Blockly.Arduino.logic_boolean=function(){return["TRUE"===this.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_boolean={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:RoboBlocks.getHelpUrl("logic_boolean"),examples:["logic_boolean_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC,keys:["LANG_LOGIC_BOOLEAN_TRUE","LANG_LOGIC_BOOLEAN_FALSE"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendDummyInput().appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TRUE"),"TRUE"],[RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_FALSE"),"FALSE"]]),"BOOL"),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BOOLEAN_TOOLTIP"))}},Blockly.Arduino.logic_compare=function(){var o=this.getFieldValue("OP"),e=Blockly.Arduino.logic_compare.OPERATORS[o],l="=="===e||"!="===e?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,t=Blockly.Arduino.valueToCode(this,"A",l)||"",s=Blockly.Arduino.valueToCode(this,"B",l)||"",i="",_=RoboBlocks.findPinMode(t);return i+=_.code,t=_.pin,i+=(_=RoboBlocks.findPinMode(s)).code,s=_.pin,[i+=JST.logic_compare({argument0:t,argument1:s,operator:e}),l]},Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},Blockly.Blocks.logic_compare={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:RoboBlocks.getHelpUrl("logic_compare"),examples:["logic_compare_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC,keys:["LANG_LOGIC_COMPARE_TOOLTIP_EQ","LANG_LOGIC_COMPARE_TOOLTIP_NEQ","LANG_LOGIC_COMPARE_TOOLTIP_LT","LANG_LOGIC_COMPARE_TOOLTIP_LTE","LANG_LOGIC_COMPARE_TOOLTIP_GT","LANG_LOGIC_COMPARE_TOOLTIP_GTE"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A"),this.appendValueInput("B").appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_EQ")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_NEQ")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LT")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_LTE")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GT")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_COMPARE_TOOLTIP_GTE"))}},Blockly.Blocks.logic_compare.OPERATORS=[["=","EQ"],["≠","NEQ"],["<","LT"],["≤","LTE"],[">","GT"],["≥","GTE"]],Blockly.Arduino.logic_operation=function(){var o="",e="AND"===this.getFieldValue("OP")?"&&":"OR"===this.getFieldValue("OP")?"||":"",l="&&"==e?Blockly.Arduino.ORDER_LOGICAL_AND:"||"==e?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE,t=Blockly.Arduino.valueToCode(this,"A",l)||"",s=Blockly.Arduino.valueToCode(this,"B",l)||"",i=RoboBlocks.findPinMode(t);return o+=i.code,t=i.pin,o+=(i=RoboBlocks.findPinMode(s)).code,s=i.pin,"XOR"===this.getFieldValue("OP")?o+="((!("+t+"))&&("+s+")||((!("+s+"))&&("+t+")))":"XNOR"===this.getFieldValue("OP")?o+="(("+t+")&&("+s+")||((!("+s+"))&&(!("+t+"))))":"IMPLIES"===this.getFieldValue("OP")?o+="((!("+t+"))||("+s+"))":o+="("+t+") "+e+" ("+s+")",[o,l]},Blockly.Blocks.logic_operation={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:RoboBlocks.getHelpUrl("logic_operation"),examples:["logic_operation_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC,keys:["LANG_LOGIC_OPERATION_AND","LANG_LOGIC_OPERATION_OR","LANG_LOGIC_OPERATION_XOR","LANG_LOGIC_OPERATION_XNOR","LANG_LOGIC_OPERATION_IMPLIES","LANG_LOGIC_OPERATION_TOOLTIP_AND","LANG_LOGIC_OPERATION_TOOLTIP_OR","LANG_LOGIC_OPERATION_TOOLTIP_XOR","LANG_LOGIC_OPERATION_TOOLTIP_XNOR","LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A").setCheck(Boolean),this.appendValueInput("B").setCheck(Boolean).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_AND")||"AND","AND"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")||"OR","OR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XOR")||"XOR","XOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_XNOR")||"XNOR","XNOR"],[RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_IMPLIES")||"IMPLIES","IMPLIES"]]),"OP"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_AND")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_AND")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XOR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_XNOR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_TOOLTIP_IMPLIES"))}},Blockly.Arduino.logic_negate=function(){var o=Blockly.Arduino.ORDER_UNARY_PREFIX,e=Blockly.Arduino.valueToCode(this,"BOOL",o)||"false",l="",t=RoboBlocks.findPinMode(e);return l+=t.code,e=t.pin,[l+=JST.logic_negate({argument0:e}),o]},Blockly.Blocks.logic_negate={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:RoboBlocks.getHelpUrl("logic_negate"),examples:["logic_negate_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC,keys:["LANG_LOGIC_NEGATE_INPUT_NOT","LANG_LOGIC_NEGATE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_INPUT_NOT")),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_NEGATE_TOOLTIP"))}},Blockly.Arduino.logic_to_boolean=function(){var o="";return[o+="(("+Blockly.Arduino.valueToCode(this,"NUM",Blockly.ORDER_NONE)+")>0? true: false)",Blockly.ORDER_ATOMIC]},Blockly.Blocks.logic_to_boolean={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),helpUrl:RoboBlocks.getHelpUrl("logic_to_boolean"),examples:["logic_negate_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC,keys:["LANG_LOGIC_TO_BOOLEAN","LANG_LOGIC_TO_BOOLEAN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.appendValueInput("NUM").setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_LOGIC_TO_BOOLEAN")),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_TO_BOOLEAN_TOOLTIP"))}},Blockly.Arduino.logic_bitwise_operation=function(){var o=Blockly.Arduino.valueToCode(this,"A",Blockly.Arduino.ORDER_ATOMIC)||"",e=Blockly.Arduino.valueToCode(this,"B",Blockly.Arduino.ORDER_ATOMIC)||"";return["(("+o+")"+this.getFieldValue("OP")+"("+e+"))",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_bitwise_operation={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BITWISE"),helpUrl:RoboBlocks.getHelpUrl("logic_bitwise_operation"),examples:["logic_operation_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC_BITWISE,keys:["LANG_LOGIC_BITWISE_OPERATION_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC_BITWISE),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown([["&","&"],["|","|"],["^","^"]]),"OP"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BITWISE_OPERATION_TOOLTIP"))}},Blockly.Arduino.logic_bitwise_not=function(){return["(~"+(Blockly.Arduino.valueToCode(this,"A",Blockly.Arduino.ORDER_ATOMIC)||"")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_bitwise_not={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BITWISE"),helpUrl:RoboBlocks.getHelpUrl("logic_bitwise_not"),examples:["logic_operation_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC_BITWISE,keys:["LANG_LOGIC_BITWISE_NOT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC_BITWISE),this.setOutput(!0,Number),this.appendValueInput("A").appendField("~").setCheck(Number),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BITWISE_NOT_TOOLTIP"))}},Blockly.Arduino.logic_shift=function(){var o=Blockly.Arduino.valueToCode(this,"A",Blockly.Arduino.ORDER_ATOMIC)||"",e=Blockly.Arduino.valueToCode(this,"B",Blockly.Arduino.ORDER_ATOMIC)||"";return["(("+o+")"+this.getFieldValue("OP")+"("+e+"))",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_shift={category:RoboBlocks.locales.getKey("LANG_CATEGORY_LOGIC"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BITWISE"),helpUrl:RoboBlocks.getHelpUrl("logic_shift"),examples:["logic_operation_example.bly"],tags:["logic"],category_colour:RoboBlocks.LANG_COLOUR_LOGIC,colour:RoboBlocks.LANG_COLOUR_LOGIC_BITWISE,keys:["LANG_LOGIC_BITWISE_SHIFT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC_BITWISE),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown([["<<","<<"],[">>",">>"]]),"OP"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_LOGIC_BITWISE_SHIFT_TOOLTIP"))}},Blockly.Arduino.math_arithmetic=function(){var o=this.getFieldValue("OP"),e=Blockly.Arduino.math_arithmetic.OPERATORS[o],l=e[0],t=e[1],s=Blockly.Arduino.valueToCode(this,"A",t)||"",i=Blockly.Arduino.valueToCode(this,"B",t)||"",_="",n=RoboBlocks.findPinMode(s);return _+=n.code,s=n.pin,_+=(n=RoboBlocks.findPinMode(i)).code,i=n.pin,l?[_+=JST.math_arithmetic({argument0:s,argument1:i,operator:l}),t]:[_=JST.math_arithmetic_pow({argument0:s,argument1:i}),Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_arithmetic={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_arithmetic"),examples:["math_arithmetic_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_ARITHMETIC_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP"))}},Blockly.Blocks.math_arithmetic.OPERATORS=[["+","ADD"],["-","MINUS"],["×","MULTIPLY"],["÷","DIVIDE"],["^","POWER"]],Blockly.Blocks.math_arithmetic.TOOLTIPS={ADD:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_ADD"),MINUS:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MINUS"),MULTIPLY:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY"),DIVIDE:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE"),POWER:RoboBlocks.locales.getKey("LANG_MATH_ARITHMETIC_TOOLTIP_POWER")},Blockly.Arduino.math_minmax=function(){var o="";return[o+=this.getFieldValue("OP")+"("+(Blockly.Arduino.valueToCode(this,"A",Blockly.Arduino.ORDER_NONE)||"")+","+(Blockly.Arduino.valueToCode(this,"B",Blockly.Arduino.ORDER_NONE)||"")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_minmax={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_minmax"),examples:["minmax_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_MINMAX_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("A").appendField(new Blockly.FieldDropdown([["min","min"],["max","max"]]),"OP").appendField("(").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(","),this.appendDummyInput("").appendField(")"),this.setInputsInline(!0);this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_MINMAX_TOOLTIP"))}},Blockly.Arduino.math_modulo=function(){var o=Blockly.Arduino.valueToCode(this,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",e=Blockly.Arduino.valueToCode(this,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=(t=RoboBlocks.findPinMode(e)).code,e=t.pin,[l+=JST.math_modulo({argument0:o,argument1:e}),Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_modulo={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_modulo"),examples:["math_arithmetic_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_MODULO_TOOLTIP"],init:function(){this.setColour(this.colour),this.setOutput(!0,Number),this.appendValueInput("DIVIDEND").setCheck(Number),this.appendValueInput("DIVISOR").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("%"),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_MODULO_TOOLTIP"))}},Blockly.Arduino.math_number=function(){var o=window.parseFloat(this.getFieldValue("NUM"));return[o,o<0?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_number"),examples:["math_number_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_NUMBER_TOOLTIP"],init:function(){this.setColour(this.colour),this.appendDummyInput().appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM"),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_NUMBER_TOOLTIP"))}},Blockly.Blocks.math_number.validator=function(o){var e=window.parseFloat(o||0);return window.isNaN(e)?null:String(e)},Blockly.Arduino.math_random=function(){var o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=(t=RoboBlocks.findPinMode(e)).code,e=t.pin,Blockly.Arduino.definitions_.define_random_bitOut=JST.math_random_bitOut({}),Blockly.Arduino.definitions_.define_random_seedOut=JST.math_random_seedOut({}),Blockly.Arduino.setups_.setup_randomseed="unsigned long seed =seedOut(31);\n  randomSeed(seed);\n",[l+=JST.math_random({value_num:o,value_dmax:e}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_random={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_random"),examples:["math_random_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_ADVANCED_MATH_RANDOM","LANG_ADVANCED_MATH_RANDOM_AND","LANG_ADVANCED_MATH_RANDOM_TOOLTIP"],init:function(){this.setColour(this.colour),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM")).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_AND")).setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_RANDOM_TOOLTIP"))}},Blockly.Arduino.math_to_number=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),e="";return[e+="("+(this.getFieldValue("CAST")||"")+")("+o+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_to_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:RoboBlocks.getHelpUrl("math_to_number"),examples:["math_to_number_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_ADVANCED_MATH_CAST","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_FLOAT"],init:function(){this.setColour(this.colour),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"CAST"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_CAST_TOOLTIP"))}},Blockly.Arduino.math_sinusoid=function(){var o=Blockly.Arduino.valueToCode(this,"AMPLITUDE",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"FREQ",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"PHASE",Blockly.Arduino.ORDER_NONE),t=Blockly.Arduino.valueToCode(this,"OFFSET",Blockly.Arduino.ORDER_NONE);return["("+o+")*sin((6.28318530717959e-06)*(("+e+")*("+Blockly.Arduino.valueToCode(this,"TIME",Blockly.Arduino.ORDER_NONE)+"))+0.017453292519943*("+l+"))+("+t+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_sinusoid={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),tags:["math"],helpUrl:RoboBlocks.getHelpUrl("math_sinusoid"),examples:["math_sinusoid_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_ADVANCED_MATH_SINUSOID","LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE","LANG_ADVANCED_MATH_SINUSOID_FREQ","LANG_ADVANCED_MATH_SINUSOID_PHASE","LANG_ADVANCED_MATH_SINUSOID_OFFSET","LANG_ADVANCED_MATH_SINUSOID_TIME","LANG_ADVANCED_MATH_SINUSOID_TOOLTIP"],init:function(){this.setColour(this.colour),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("AMPLITUDE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_AMPLITUDE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("FREQ").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_FREQ")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("PHASE").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_PHASE")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("OFFSET").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_OFFSET")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.appendValueInput("TIME").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TIME")).setAlign(Blockly.Blocks.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_MATH_SINUSOID_TOOLTIP"))}},Blockly.Arduino.math_1DArray_get=function(){var o=Blockly.Arduino.valueToCode(this,"INPUT",Blockly.Arduino.ORDER_NONE),e="";return null!==o&&(e=o+"["+this.getFieldValue("INDEX")+"]"),[e,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_get={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_get"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_ARRAY_GET","LANG_MATH_ARRAY_GET_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("INPUT").appendField(RoboBlocks.locales.getKey("LANG_MATH_ARRAY_GET")).setAlign(Blockly.ALIGN_RIGHT).setCheck("Array"),this.appendDummyInput("").appendField("[").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"INDEX").appendField("]").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ARRAY_GET_TOOLTIP"))}},Blockly.Arduino.math_1DArray_set=function(){var o=Blockly.Arduino.valueToCode(this,"INPUT",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),l="";return null!==o&&(l=o+"["+this.getFieldValue("INDEX")+"]="+e),[l,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_set={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_set"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_ARRAY_SET","LANG_MATH_ARRAY_SET_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("INPUT").appendField(RoboBlocks.locales.getKey("LANG_MATH_ARRAY_SET")).setAlign(Blockly.ALIGN_RIGHT).setCheck("Array"),this.appendValueInput("VALUE").appendField("[").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"INDEX").appendField("]").appendField("=").setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setOutput(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_ARRAY_SET_TOOLTIP"))}},Blockly.Arduino.math_1DArray_constructor2=function(){var o="{";return o+=this.getFieldValue("NUM0")+","+this.getFieldValue("NUM1"),[o+="}",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_constructor2={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_constructor2"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("ITEMS").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM0").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM1"),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"Array"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_TOOLTIP")),this.itemCount_=2}},Blockly.Arduino.math_1DArray_constructor3=function(){var o="{";return o+=this.getFieldValue("NUM0")+","+this.getFieldValue("NUM1")+","+this.getFieldValue("NUM2"),[o+="}",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_constructor3={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_constructor3"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("ITEMS").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM0").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM1").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM2"),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"Array"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_TOOLTIP")),this.itemCount_=3}},Blockly.Arduino.math_1DArray_constructor4=function(){var o="{";return o+=this.getFieldValue("NUM0")+","+this.getFieldValue("NUM1")+","+this.getFieldValue("NUM2")+","+this.getFieldValue("NUM3"),[o+="}",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_constructor4={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_constructor4"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("ITEMS").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM0").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM1").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM2").appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM3"),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"Array"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_TOOLTIP")),this.itemCount_=4}},Blockly.Arduino.math_1DArray_constructor=function(){var o="{";if(0<this.itemCount_){item=Blockly.Arduino.valueToCode(this,"ITEM0",Blockly.Arduino.ORDER_NONE),o+=item;for(var e=1;e<this.itemCount_;e++)item=Blockly.Arduino.valueToCode(this,"ITEM"+e,Blockly.Arduino.ORDER_NONE),o+=","+item}return[o+="}",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_1DArray_constructor={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_constructor"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY","LANG_VARIABLES_ARRAY_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput("ITEMS").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY")),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"Array"),this.setMutator(new Blockly.Mutator(["math_1DArray_constructor_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_TOOLTIP")),this.itemCount_=0},mutationToDom:function(){if(!this.itemCount_)return null;var o=document.createElement("mutation");return this.itemCount_&&o.setAttribute("item",this.itemCount_),o},domToMutation:function(o){this.itemCount_=window.parseInt(o.getAttribute("item"),10);for(var e=0;e<this.itemCount_;e++)this.appendValueInput("ITEM"+e).setCheck([Number,Boolean])},decompose:function(o){var e=o.newBlock("math_1DArray_constructor_constructor");e.initSvg();for(var l=e.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var s=o.newBlock("math_1DArray_constructor_item");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}return e},compose:function(o){for(var e=this.itemCount_-1;0<=e;e--)this.removeInput("ITEM"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){switch(l.type){case"math_1DArray_constructor_item":var t=this.appendValueInput("ITEM"+this.itemCount_).setCheck([Number,Boolean]);this.itemCount_++,l.valueConnection_&&t.connection.connect(l.valueConnection_);break;default:throw"Unknown block type."}l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=0;e;){switch(e.type){case"math_1DArray_constructor_item":var t=this.getInput("ITEM"+l);e.valueConnection_=t&&t.connection.targetConnection,l++;break;default:throw"Unknown block type."}e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.math_1DArray_constructor_constructor={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY","LANG_VARIABLES_ARRAY_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK").setCheck("array_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.math_1DArray_constructor_item={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_ITEM"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ITEM")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"array_item"),this.setNextStatement(!0,"array_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ITEM")),this.contextMenu=!1}},Blockly.Arduino.math_1DArray_decode=function(){var o="";o+="{\n",o+="byte* pData=(byte*)("+Blockly.Arduino.valueToCode(this,"ARRAY",Blockly.Arduino.ORDER_NONE)+");\n";var e=0;for(e=0;e<this.itemCount_;e++){var l=Blockly.Arduino.valueToCode(this,"ITEM"+e,Blockly.Arduino.ORDER_NONE),t=RoboBlocks.variables[l][0];o+=l+"=("+t+")(*(("+t+"*)pData));\n",e<this.itemCount_-1&&(o+="pData+=sizeof("+t+");\n")}return o+="}\n"},Blockly.Blocks.math_1DArray_decode={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_decode"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_DECODE","LANG_VARIABLES_ARRAY_DECODE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("ARRAY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE")).setCheck("Array"),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_INTO")),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setOutput(!1),this.setMutator(new Blockly.Mutator(["math_1DArray_decode_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE_TOOLTIP")),this.itemCount_=0},mutationToDom:function(){if(!this.itemCount_)return null;var o=document.createElement("mutation");return this.itemCount_&&o.setAttribute("item",this.itemCount_),o},domToMutation:function(o){this.itemCount_=window.parseInt(o.getAttribute("item"),10);for(var e=0;e<this.itemCount_;e++)this.appendValueInput("ITEM"+e).setCheck("Variable")},decompose:function(o){var e=o.newBlock("math_1DArray_decode_decode");e.initSvg();for(var l=e.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var s=o.newBlock("math_1DArray_decode_item");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}return e},compose:function(o){for(var e=this.itemCount_-1;0<=e;e--)this.removeInput("ITEM"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){switch(l.type){case"math_1DArray_decode_item":var t=this.appendValueInput("ITEM"+this.itemCount_).setCheck("Variable");this.itemCount_++,l.valueConnection_&&t.connection.connect(l.valueConnection_);break;default:throw"Unknown block type."}l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=0;e;){switch(e.type){case"math_1DArray_decode_item":var t=this.getInput("ITEM"+l);e.valueConnection_=t&&t.connection.targetConnection,l++;break;default:throw"Unknown block type."}e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.math_1DArray_decode_decode={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_DECODE","LANG_VARIABLES_ARRAY_DECODE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK").setCheck("array_decode_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.math_1DArray_decode_item={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_DECODE_ITEM"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE_ITEM")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"array_decode_item"),this.setNextStatement(!0,"array_decode_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_DECODE_ITEM")),this.contextMenu=!1}},Blockly.Arduino.math_1DArray_encode=function(){var o=Blockly.Arduino.valueToCode(this,"ARRAY",Blockly.Arduino.ORDER_NONE),e="";Blockly.Arduino.definitions_.copyBytes="void copyBytes(byte* dst, byte* src, int len) {\n    src+=(len-1);\n    for (int i = 0; i < len; i++) {\n        *dst++ = *src--;\n    }\n}\n",e+="{\n",e+="byte* pData=(byte*)("+o+");\n";var l=0;for(l=0;l<this.itemCount_;l++){var t=Blockly.Arduino.valueToCode(this,"ITEM"+l,Blockly.Arduino.ORDER_NONE),s=RoboBlocks.variables[t][0];e+="copyBytes(pData,(byte*)&"+t+",sizeof("+s+"));\n",l<this.itemCount_-1&&(e+="pData+=sizeof("+s+");\n")}return e+="}\n"},Blockly.Blocks.math_1DArray_encode={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("math_1DArray_encode"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_DECODE","LANG_VARIABLES_ARRAY_ENCODE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("ARRAY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE")).setCheck("Array"),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_WITH")),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setOutput(!1),this.setMutator(new Blockly.Mutator(["math_1DArray_encode_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE_TOOLTIP")),this.itemCount_=0},mutationToDom:function(){if(!this.itemCount_)return null;var o=document.createElement("mutation");return this.itemCount_&&o.setAttribute("item",this.itemCount_),o},domToMutation:function(o){this.itemCount_=window.parseInt(o.getAttribute("item"),10);for(var e=0;e<this.itemCount_;e++)this.appendValueInput("ITEM"+e).setCheck("Variable")},decompose:function(o){var e=o.newBlock("math_1DArray_encode_encode");e.initSvg();for(var l=e.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var s=o.newBlock("math_1DArray_encode_item");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}return e},compose:function(o){for(var e=this.itemCount_-1;0<=e;e--)this.removeInput("ITEM"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){switch(l.type){case"math_1DArray_encode_item":var t=this.appendValueInput("ITEM"+this.itemCount_).setCheck("Variable");this.itemCount_++,l.valueConnection_&&t.connection.connect(l.valueConnection_);break;default:throw"Unknown block type."}l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=0;e;){switch(e.type){case"math_1DArray_encode_item":var t=this.getInput("ITEM"+l);e.valueConnection_=t&&t.connection.targetConnection,l++;break;default:throw"Unknown block type."}e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.math_1DArray_encode_encode={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_ENCODE","LANG_VARIABLES_ARRAY_ENCODE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE")).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("STACK").setCheck("array_encode_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.math_1DArray_encode_item={colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_VARIABLES_ARRAY_ENCODE_ITEM"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE_ITEM")).setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,"array_encode_item"),this.setNextStatement(!0,"array_encode_item"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_ENCODE_ITEM")),this.contextMenu=!1}},Blockly.Arduino.math_single=function(){var o,e,l=this.getFieldValue("OP"),t="";if("NEG"===l)return o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"",t+=(e=RoboBlocks.findPinMode(o)).code,"-"===(o=e.pin)[0]&&(o=" "+o),[t+="-"+o,Blockly.Arduino.ORDER_UNARY_PREFIX];"SIN"===l||"COS"===l||"TAN"===l?(o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",t+=(e=RoboBlocks.findPinMode(o)).code,o=e.pin):"LOG10"===l?t="":(o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(e=RoboBlocks.findPinMode(o)).code,o=e.pin);var s=3.14159;switch(l){case"ABS":t+="abs("+o+")";break;case"ROOT":t+="sqrt("+o+")";break;case"LN":t+="log("+o+")";break;case"EXP":t+="exp("+o+")";break;case"POW10":t+="pow(10,"+o+")";break;case"SIN":t+="sin("+o+" / 180 * "+s+")";break;case"COS":t+="cos("+o+" / 180 * "+s+")";break;case"TAN":t+="tan("+o+" / 180 * "+s+")"}if(t)return[t,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(l){case"LOG10":o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"",t+=(e=RoboBlocks.findPinMode(o)).code,t+="log("+(o=e.pin)+") / log(10)";break;case"ASIN":t+="asin("+o+") / "+s+" * 180";break;case"ACOS":t+="acos("+o+") / "+s+" * 180";break;case"ATAN":t+="atan("+o+") / "+s+" * 180";break;default:throw"Unknown math operator: "+l}return[t,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_single={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),helpUrl:RoboBlocks.getHelpUrl("math_single"),examples:["math_single_example.bly"],tags:["math"],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:["LANG_MATH_SINGLE_OP_ROOT","LANG_MATH_SINGLE_OP_ABSOLUTE","LANG_MATH_SINGLE_TOOLTIP_ROOT","LANG_MATH_SINGLE_TOOLTIP_ABS","LANG_MATH_SINGLE_TOOLTIP_NEG","LANG_MATH_SINGLE_TOOLTIP_LN","LANG_MATH_SINGLE_TOOLTIP_LOG10","LANG_MATH_SINGLE_TOOLTIP_EXP","LANG_MATH_SINGLE_TOOLTIP_POW10"],init:function(){this.setColour(this.colour),this.setOutput(!0,Number),this.appendValueInput("NUM").setCheck(Number).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ROOT")||"SQR ROOT","ROOT"],[RoboBlocks.locales.getKey("LANG_MATH_SINGLE_OP_ABSOLUTE")||"ABS","ABS"],["-","NEG"],["ln","LN"],["log10","LOG10"],["e^","EXP"],["10^","POW10"],["sin","SIN"],["cos","COS"],["tan","TAN"],["asin","ASIN"],["acos","ACOS"],["atan","ATAN"]]),"OP");this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ROOT")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_ABS")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_NEG")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LN")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_LOG10")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_EXP")+" "+RoboBlocks.locales.getKey("LANG_LOGIC_OPERATION_OR")+" "+RoboBlocks.locales.getKey("LANG_MATH_SINGLE_TOOLTIP_POW10"))}},Blockly.Arduino.math_linear_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_linear_function="float linear(float x, float a, float b){\n return a+b*x;\n}\n",["linear("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_linear_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_linear_function"),tags:["linear"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_LINEAR")).appendField(new Blockly.FieldImage("img/blocks/linear.svg",96*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_LINEAR_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_quadratic_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_quadratic_function="float quadratic(float x, float a, float b, float c){\n return a+b*x+c*x*x;\n}\n",["quadratic("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_quadratic_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_quadratic_function"),tags:["quadratic"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_QUADRATIC")).appendField(new Blockly.FieldImage("img/blocks/quadratic.svg",144*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_QUADRATIC_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_cubic_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_cubic_function="float cubic(float x, float a, float b, float c, float d){\n return a+b*x+c*x*x+d*x*x*x;\n}\n",["cubic("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+","+this.getFieldValue("d")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_cubic_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_cubic_function"),tags:["cubic"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_CUBIC")).appendField(new Blockly.FieldImage("img/blocks/cubic.svg",180*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").appendField("d").appendField(new Blockly.FieldTextInput("0"),"d").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_CUBIC_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_reciprocal_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_reciprocal_function="float reciprocal(float x, float a, float b){\n return 1.0/(a+b*x);\n}\n",["reciprocal("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_reciprocal_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_reciprocal_function"),tags:["reciprocal"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RECIPROCAL")).appendField(new Blockly.FieldImage("img/blocks/reciprocal.svg",120*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RECIPROCAL_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_reciprocal_quadratic_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_reciprocal_quadratic_function="float reciprocal_quadratic(float x, float a, float b, float c){\n return 1.0/(a+b*x+c*x*x);\n}\n",["reciprocal_quadratic("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_reciprocal_quadratic_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_reciprocal_quadratic_function"),tags:["reciprocal_quadratic"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RECIPROCAL_QUADRATIC")).appendField(new Blockly.FieldImage("img/blocks/reciprocal_quadratic.svg",180*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RECIPROCAL_QUADRATIC_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_gaussian_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_gaussian_function="float gaussian(float x, float a, float b, float c){\n return a*exp(-(x-b)*(x-b)/(2*c*c));\n}\n",["gaussian("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_gaussian_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_gaussian_function"),tags:["gaussian"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_GAUSSIAN")).appendField(new Blockly.FieldImage("img/blocks/gaussian.svg",120*options.zoom,36*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_GAUSSIAN_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_rational_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_rational_function="float rational(float x, float a, float b, float c, float d){\n return (a+b*x)/(1.0+c*x+d*x*x);\n}\n",["rational("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+","+this.getFieldValue("d")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_rational_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_rational_function"),tags:["rational"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RATIONAL")).appendField(new Blockly.FieldImage("img/blocks/rational.svg",144*options.zoom,48*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").appendField("d").appendField(new Blockly.FieldTextInput("0"),"d").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_RATIONAL_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_geometric_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_geometric_function="float geometric(float x, float a, float b){\n return a*pow(x,b*x);\n}\n",["geometric("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_geometric_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_geometric_function"),tags:["geometric"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_GEOMETRIC")).appendField(new Blockly.FieldImage("img/blocks/geometric.svg",120*options.zoom,22*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_GEOMETRIC_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_power_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_power_function="float power(float x, float a, float b){\n return a*pow(b,x);\n}\n",["power("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_power_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_power_function"),tags:["power"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_POWER")).appendField(new Blockly.FieldImage("img/blocks/power.svg",86*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_POWER_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_root_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_root_function="float root(float x, float a, float b){\n return a*pow(b,1.0/x);\n}\n",["root("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_root_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_root_function"),tags:["root"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_ROOT")).appendField(new Blockly.FieldImage("img/blocks/root.svg",120*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_ROOT_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_sinusoidal_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_sinusoidal_function="float sinusoidal(float x, float a, float b, float c, float d){\n return a+b*cos(c*x+d);\n}\n",["sinusoidal("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+","+this.getFieldValue("d")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_sinusoidal_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_sinusoidal_function"),tags:["sinusoidal"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_SINUSOIDAL")).appendField(new Blockly.FieldImage("img/blocks/sinusoidal.svg",180*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").appendField("d").appendField(new Blockly.FieldTextInput("0"),"d").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_SINUSOIDAL_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.math_trunc_fourier_function=function(){var o=Blockly.Arduino.valueToCode(this,"x",Blockly.Arduino.ORDER_NONE);return Blockly.Arduino.definitions_.define_trunc_fourier_function="float trunc_fourier(float x, float a, float b, float c, float d){\n return a*cos(x+d)+b*cos(2*x+d)+c*cos(3*x+d);\n}\n",["trunc_fourier("+o+","+this.getFieldValue("a")+","+this.getFieldValue("b")+","+this.getFieldValue("c")+","+this.getFieldValue("d")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.math_trunc_fourier_function={category:RoboBlocks.locales.getKey("LANG_CATEGORY_MATH"),subcategory:RoboBlocks.locales.getKey("LANG_CATEGORY_CURVE"),helpUrl:RoboBlocks.getHelpUrl("math_trunc_fourier_function"),tags:["trunc_fourier"],examples:[""],category_colour:RoboBlocks.LANG_COLOUR_MATH,colour:RoboBlocks.LANG_COLOUR_MATH,keys:[],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("x").appendField(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_TRUNC_FOURIER")).appendField(new Blockly.FieldImage("img/blocks/trunc_fourier.svg",320*options.zoom,24*options.zoom,"*")).setCheck(Number),this.appendDummyInput("").appendField("a").appendField(new Blockly.FieldTextInput("0"),"a").appendField("b").appendField(new Blockly.FieldTextInput("0"),"b").appendField("c").appendField(new Blockly.FieldTextInput("0"),"c").appendField("d").appendField(new Blockly.FieldTextInput("0"),"d").setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_MATH_FUNCTION_TRUNC_FOURIER_TOOLTIP")),this.itemCount_=0}},Blockly.Arduino.pin_analog=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_analog={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ANALOG"),helpUrl:RoboBlocks.getHelpUrl("pin_analog"),examples:["inout_analog_read_example.bly"],tags:["input","output"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED,keys:["LANG_VARIABLES_PIN_ANALOG","LANG_VARIABLES_PIN_ANALOG_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",20*options.zoom,20*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_ANALOG")).appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setInputsInline(!0),this.setOutput(!0,"ANALOG_PIN"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_ANALOG_TOOLTIP"))}},Blockly.Arduino.pin_digital=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_digital={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("pin_digital"),examples:["inout_digital_read_example.bly"],tags:["input","output"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_VARIABLES_PIN_DIGITAL","LANG_VARIABLES_PIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",20*options.zoom,20*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_DIGITAL")).appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setInputsInline(!0),this.setOutput(!0,"DIGITAL_PIN"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_TOOLTIP"))}},Blockly.Arduino.pin_pwm=function(){return[this.getFieldValue("PIN")||"",Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_pwm={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_DIGITAL"),helpUrl:RoboBlocks.getHelpUrl("pin_pwm"),examples:["inout_analog_write_example.bly"],tags:["input","output"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL,keys:["LANG_VARIABLES_PIN_PWM","LANG_VARIABLES_PIN_PWM_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_DIGITAL),this.appendDummyInput("").appendField(new Blockly.FieldImage("img/blocks/pwm_signal.svg",20*options.zoom,20*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_PWM")).appendField(new Blockly.FieldDropdown(profiles.default.pwm),"PIN"),this.setInputsInline(!0),this.setOutput(!0,"PWM_PIN"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_PIN_PWM_TOOLTIP"))}},Blockly.Arduino.serial_available=function(){var o=Blockly.Arduino.statementToCode(this,"DO");return o=o.replace(/&quot;/g,'"'),Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n"),JST.serial_available({branch:o})},Blockly.Blocks.serial_available={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_available"),tags:["serial","communication"],examples:["serial_available_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_AVAILABLE","LANG_CONTROLS_REPEAT_INPUT_DO","LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.appendStatementInput("DO").appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_REPEAT_INPUT_DO")),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP"))}},Blockly.Arduino.serial_print=function(){var o=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n"),e+="Serial.print("+o+");\n"},Blockly.Blocks.serial_print={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_print"),tags:["serial","communication"],examples:["serial_print_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_PRINT","LANG_ADVANCED_SERIAL_PRINT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINT_TOOLTIP"))}},Blockly.Arduino.serial_println=function(){var o=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n"),e+="Serial.println("+o+");\n"},Blockly.Blocks.serial_println={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_println"),tags:["serial","communication"],examples:["serial_print_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_PRINTLN","LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP"))}},Blockly.Arduino.serial_plot=function(){var o=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n"),e+="Serial.println("+o+");\n"},Blockly.Blocks.serial_plot={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_plot"),tags:["serial","communication"],examples:["serial_print_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_PLOT","LANG_ADVANCED_SERIAL_PLOT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendValueInput("CONTENT").setCheck(Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PLOT")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PLOT_TOOLTIP"))}},Blockly.Arduino.plot_join=function(){var o="";if(Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n"),0===this.itemCount_)return["''",Blockly.Arduino.ORDER_ATOMIC];if(1===this.itemCount_)return o+="Serial.println("+(Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_ATOMIC)||"")+");\n";for(var e=0;e<this.itemCount_-1;e++)argumenti=Blockly.Arduino.valueToCode(this,"ADD"+e,Blockly.Arduino.ORDER_ATOMIC)||"",o+="Serial.print("+argumenti+");\n",o+='Serial.print(",");\n';return argumentn=Blockly.Arduino.valueToCode(this,"ADD"+(this.itemCount_-1),Blockly.Arduino.ORDER_ATOMIC)||"",o+="Serial.println("+argumentn+");\n"},Blockly.Blocks.plot_join={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("text_join"),examples:["plot_join_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,keys:["LANG_PLOT_JOIN_Field_CREATEWITH","LANG_PLOT_JOIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendValueInput("ADD0").appendField(RoboBlocks.locales.getKey("LANG_PLOT_JOIN_Field_CREATEWITH")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)).setCheck(Number),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.appendValueInput("ADD1"),this.setMutator(new Blockly.Mutator(["plot_create_join_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_PLOT_JOIN_TOOLTIP")),this.itemCount_=2},mutationToDom:function(){var o=document.createElement("mutation");return o.setAttribute("items",this.itemCount_),o},domToMutation:function(o){for(var e=0;e<this.itemCount_;e++)this.removeInput("ADD"+e);for(this.itemCount_=window.parseInt(o.getAttribute("items"),10),e=0;e<this.itemCount_;e++){var l=this.appendValueInput("ADD"+e).setCheck(Number);0===e&&l.appendField(RoboBlocks.locales.getKey("LANG_PLOT_JOIN_Field_CREATEWITH")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom))}},decompose:function(o){var e=o.newBlock("plot_create_join_container");e.initSvg();for(var l=e.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var s=o.newBlock("plot_create_join_item");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}return e},compose:function(o){if(0===this.itemCount_)this.removeInput("EMPTY");else for(var e=this.itemCount_-1;0<=e;e--)this.removeInput("ADD"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){var t=this.appendValueInput("ADD"+this.itemCount_).setCheck(Number);0===this.itemCount_&&t.appendField(RoboBlocks.locales.getKey("LANG_PLOT_JOIN_Field_CREATEWITH")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),l.valueConnection_&&t.connection.connect(l.valueConnection_),this.itemCount_++,l=l.nextConnection&&l.nextConnection.targetBlock()}},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=0;e;){var t=this.getInput("ADD"+l);e.valueConnection_=t&&t.connection.targetConnection,l++,e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.plot_create_join_container={colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,keys:["LANG_PLOT_CREATE_JOIN_TITLE_JOIN","LANG_PLOT_CREATE_JOIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PLOT_CREATE_JOIN_TITLE_JOIN")),this.appendStatementInput("STACK").setCheck("text_join"),this.setTooltip(RoboBlocks.locales.getKey("LANG_PLOT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.plot_create_join_item={colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,keys:["LANG_PLOT_CREATE_JOIN_ITEM_TITLE_ITEM","LANG_PLOT_CREATE_JOIN_ITEM_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_PLOT_CREATE_JOIN_ITEM_TITLE_ITEM")),this.setPreviousStatement(!0,"text_join"),this.setNextStatement(!0,"text_join"),this.setTooltip(RoboBlocks.locales.getKey("LANG_PLOT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.serial_parseint=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n");return["Serial.parseInt()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_parseint={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_parseint"),tags:["serial","communication"],examples:["logic_operation_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_PARSEINT","LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEINT_TOOLTIP"))}},Blockly.Arduino.serial_parsefloat=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n");return["Serial.parseFloat()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_parsefloat={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_parsefloat"),tags:["serial","communication"],examples:["logic_operation_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_PARSEFLOAT","LANG_ADVANCED_SERIAL_PARSEFLOAT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEFLOAT")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_PARSEFLOAT_TOOLTIP"))}},Blockly.Arduino.serial_read=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n");return["Serial.read()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_read={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_read"),examples:["serial_read_example.bly"],tags:["serial","communication"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_READ","LANG_ADVANCED_SERIAL_READ_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READ_TOOLTIP"))}},Blockly.Arduino.serial_readstring=function(){Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial});return["Serial.readString()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_readstring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),tags:["serial","communication"],helpUrl:RoboBlocks.getHelpUrl("serial_readstring"),examples:["serial_readstring_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_READSTRING","LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP"))}},Blockly.Blocks.serial_write={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),helpUrl:RoboBlocks.getHelpUrl("serial_print"),tags:["serial","communication"],examples:["serial_print_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_SERIAL_WRITE","LANG_ADVANCED_SERIAL_WRITE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendValueInput("DATA",[String,"Array"]).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_WRITE")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_WRITE_TOOLTIP"))}},Blockly.Arduino.serial_write=function(){var o=Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC),e="";Blockly.Arduino.setups_.setup_serial=JST.serial_setups({bitrate:profiles.default.serial}),"ATmega32U4"===profiles.processor&&(Blockly.Arduino.setups_.setup_serial_while="while(!Serial);\n");var l=this.getInputTargetBlock("DATA");return null!==l&&("variables_get"===l.type?("variable"===RoboBlocks.variables[o][2]?"byte"===RoboBlocks.variables[o][0]||"char"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(byte));\n ":"short"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(short));\n ":"int"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(int));\n ":"long"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(long));\n ":"float"===RoboBlocks.variables[o][0]&&(e+="Serial.write((byte*)&"+o+",sizeof(float));\n "):"1DArray"===RoboBlocks.variables[o][2]&&("byte"===RoboBlocks.variables[o][0]||"char"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+","+RoboBlocks.variables[o][3]+");\n ":"short"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(short)*"+RoboBlocks.variables[o][3]+");\n ":"int"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(int)*"+RoboBlocks.variables[o][3]+");\n ":"long"===RoboBlocks.variables[o][0]?e+="Serial.write((byte*)&"+o+",sizeof(long)*"+RoboBlocks.variables[o][3]+");\n ":"float"===RoboBlocks.variables[o][0]&&(e+="Serial.write((byte*)&"+o+",sizeof(float)*"+RoboBlocks.variables[o][3]+");\n ")),this.setWarningText(null)):e+="Serial.write("+o+");\n"),e},Blockly.Arduino.advanced_conversion=function(){var o=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,[e+=(o=l.pin)+","+this.getFieldValue("CONV"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_conversion={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),tags:["serial","communication"],helpUrl:RoboBlocks.getHelpUrl("advanced_conversion"),examples:["advanced_conversion_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,keys:["LANG_ADVANCED_CONVERSION_CONVERT","LANG_ADVANCED_CONVERSION_DECIMAL","LANG_ADVANCED_CONVERSION_HEXADECIMAL","LANG_ADVANCED_CONVERSION_OCTAL","LANG_ADVANCED_CONVERSION_BINARY","LANG_ADVANCED_CONVERSION_VALUE","LANG_ADVANCED_CONVERSION_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_CONVERT")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_DECIMAL")||"DEC","DEC"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_HEXADECIMAL")||"HEX","HEX"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_OCTAL")||"OCT","OCT"],[RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_BINARY")||"BIN","BIN"]]),"CONV"),this.appendValueInput("NUM",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_VALUE")).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_CONVERSION_TOOLTIP"))}},Blockly.Arduino.serial_timeout=function(){var o=Blockly.Arduino.valueToCode(this,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_.setup_serial_timeout="Serial.setTimeout("+o+");\n",""},Blockly.Blocks.serial_timeout={category:RoboBlocks.locales.getKey("LANG_CATEGORY_COMMUNICATION"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_USB"),tags:["serial","communication"],helpUrl:RoboBlocks.getHelpUrl("serial_timeout"),category_colour:RoboBlocks.LANG_COLOUR_COMMUNICATION,colour:RoboBlocks.LANG_COLOUR_COMMUNICATION_USB,tags:["serial"],examples:["serial_read_example.bly"],keys:["LANG_ADVANCED_SERIAL_TIMEOUT","LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_COMMUNICATION_USB),this.appendValueInput("TIMEOUT",Number).appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT")).appendField(new Blockly.FieldImage("img/blocks/usb.svg",52*options.zoom,24*options.zoom)),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_TIMEOUT_TOOLTIP"))}},Blockly.Arduino.serial_special=function(){return["'"+this.getFieldValue("CHAR")+"'",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_special={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("serial_special"),tags:["serial"],examples:["serial_special_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_ADVANCED_SERIAL_SPECIAL","LANG_ADVANCED_SERIAL_SPECIAL_TAB","LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN","LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED","LANG_ADVANCED_SERIAL_SPECIAL_QUOTE","LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE","LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TAB")||"TAB","\\t"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN")||"CARRIAGE RETURN","\\r"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED")||"LINE FEED","\\n"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_QUOTE")||"QUOTE","\\'"],[RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_DOUBLE_QUOTE")||"DOUBLE_QUOTE",'\\"']]),"CHAR"),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP"))}},Blockly.Arduino.text=function(){return[Blockly.Arduino.quote_(this.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text"),examples:["controls_setupLoop_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_TEXT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField('"').appendField(new Blockly.FieldTextInput(""),"TEXT").appendField('"'),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_TEXT_TOOLTIP"))}},Blockly.Arduino.character=function(){return["'"+this.getFieldValue("TEXT")+"'",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.character={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("character"),examples:["ontrols_switch_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CHAR_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField("'").appendField(new Blockly.FieldTextInput("",function(o){return 1===o.length?o:null}),"TEXT").appendField("'"),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CHAR_TOOLTIP"))}},Blockly.Arduino.text_append=function(){var o=Blockly.Arduino.valueToCode(this,"VAR",Blockly.Arduino.ORDER_NONE)||"",e=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=(t=RoboBlocks.findPinMode(e)).code,l+=o+" += String("+(e=t.pin)+");\n"},Blockly.Blocks.text_append={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_append"),examples:["text_append_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_APPEND_TO","LANG_TEXT_APPEND_APPENDTEXT","LANG_TEXT_APPEND_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("TEXT").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_APPENDTEXT")),this.appendValueInput("VAR").appendField(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TO")),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_APPEND_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setTitleValue(e,"VAR")},getVariables:function(){var o=Blockly.Variables.allUsedVariables,e=[];if(0<o.length)for(var l in o)e.push([o[l],o[l]]);else e.push(["",""]);return e},onchange:function(){}},Blockly.Arduino.text_charAt=function(){var o=Blockly.Arduino.valueToCode(this,"STRING",Blockly.Arduino.ORDER_NONE),e="";null!==this.getInputTargetBlock("STRING")&&(e=o+"["+Blockly.Arduino.valueToCode(this,"POS",Blockly.Arduino.ORDER_NONE)+"]");return[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_charAt={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_charAt"),examples:["text_equalsIgnoreCase_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CHARAT","LANG_TEXT_CHARAT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING").setCheck([String,"Array"]),this.appendValueInput("POS").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CHARAT")).setAlign(Blockly.ALIGN_RIGHT).setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CHARAT_TOOLTIP"))}},Blockly.Arduino.text_equalsIgnoreCase=function(){var o=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE);o=o.replace(/&quot;/g,'"');var e=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE);e=e.replace(/&quot;/g,'"');var l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=(t=RoboBlocks.findPinMode(e)).code,e=t.pin,[l+=JST.text_equalsIgnoreCase({string1:o,string2:e}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_equalsIgnoreCase={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_equalsIgnoreCase"),examples:["text_equalsIgnoreCase_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_EQUALSIGNORECASE_EQUAL","LANG_TEXT_EQUALSIGNORECASE_QUESTION","LANG_TEXT_EQUALSIGNORECASE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1"),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_EQUAL")).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_QUESTION")),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_EQUALSIGNORECASE_TOOLTIP"))}},Blockly.Arduino.text_join=function(){var o,e="";if(0===this.itemCount_)return["''",Blockly.Arduino.ORDER_ATOMIC];if(1===this.itemCount_){var l=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return e+=(o=RoboBlocks.findPinMode(l)).code,[e+="String("+(l=o.pin)+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]}var t=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_NONE)||"";e=(o=RoboBlocks.findPinMode(t)).code;for(var s="String("+(t=o.pin),i=1;i<this.itemCount_;i++)t=Blockly.Arduino.valueToCode(this,"ADD"+i,Blockly.Arduino.ORDER_NONE)||"",e+=(o=RoboBlocks.findPinMode(t)).code,s+=") + String("+(t=o.pin);return[e+=s+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_join={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),helpUrl:RoboBlocks.getHelpUrl("text_join"),examples:["text_join_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_JOIN_Field_CREATEWITH","LANG_TEXT_JOIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("ADD0").appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),this.appendValueInput("ADD1"),this.setOutput(!0,String),this.setMutator(new Blockly.Mutator(["text_create_join_item"])),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_TOOLTIP")),this.itemCount_=2},mutationToDom:function(){var o=document.createElement("mutation");return o.setAttribute("items",this.itemCount_),o},domToMutation:function(o){for(var e=0;e<this.itemCount_;e++)this.removeInput("ADD"+e);for(this.itemCount_=window.parseInt(o.getAttribute("items"),10),e=0;e<this.itemCount_;e++){var l=this.appendValueInput("ADD"+e);0===e&&l.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH"))}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},decompose:function(o){var e=o.newBlock("text_create_join_container");e.initSvg();for(var l=e.getInput("STACK").connection,t=0;t<this.itemCount_;t++){var s=o.newBlock("text_create_join_item");s.initSvg(),l.connect(s.previousConnection),l=s.nextConnection}return e},compose:function(o){if(0===this.itemCount_)this.removeInput("EMPTY");else for(var e=this.itemCount_-1;0<=e;e--)this.removeInput("ADD"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock("STACK");l;){var t=this.appendValueInput("ADD"+this.itemCount_);0===this.itemCount_&&t.appendField(RoboBlocks.locales.getKey("LANG_TEXT_JOIN_Field_CREATEWITH")),l.valueConnection_&&t.connection.connect(l.valueConnection_),this.itemCount_++,l=l.nextConnection&&l.nextConnection.targetBlock()}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},saveConnections:function(o){for(var e=o.getInputTargetBlock("STACK"),l=0;e;){var t=this.getInput("ADD"+l);e.valueConnection_=t&&t.connection.targetConnection,l++,e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Blocks.text_create_join_container={colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CREATE_JOIN_TITLE_JOIN","LANG_TEXT_CREATE_JOIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TITLE_JOIN")),this.appendStatementInput("STACK").setCheck("text_join"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_TOOLTIP")),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM","LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM")),this.setPreviousStatement(!0,"text_join"),this.setNextStatement(!0,"text_join"),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP")),this.contextMenu=!1}},Blockly.Arduino.text_length=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,[e+=JST.text_length({argument0:o}),Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_length={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_length"),examples:["text_length_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_LENGTH_INPUT_LENGTH","LANG_TEXT_LENGTH_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck(String).appendField(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_INPUT_LENGTH")),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_TOOLTIP"))}},Blockly.Arduino.text_lower=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,[e+=JST.text_lower({argument0:o}),Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_lower={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_lower"),examples:["text_length_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_LENGTH_INPUT_LOWER","LANG_TEXT_LENGTH_LOWER_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck(String).appendField(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_INPUT_LOWER")),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_LOWER_TOOLTIP"))}},Blockly.Arduino.text_upper=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,[e+=JST.text_upper({argument0:o}),Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_upper={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_upper"),examples:["text_length_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_LENGTH_INPUT_UPPER","LANG_TEXT_LENGTH_UPPER_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck(String).appendField(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_INPUT_UPPER")),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_LENGTH_UPPER_TOOLTIP"))}},Blockly.Arduino.text_substring=function(){var o=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_NONE),t="",s=RoboBlocks.findPinMode(o);return t+=s.code,o=s.pin,t+=(s=RoboBlocks.findPinMode(e)).code,e=s.pin,t+=(s=RoboBlocks.findPinMode(l)).code,l=s.pin,[t+=JST.text_substring({string1:o,from:e,to:l}),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_substring={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_substring"),examples:["text_substring_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_SUBSTRING","LANG_TEXT_SUBSTRING_FROM","LANG_TEXT_SUBSTRING_TO","LANG_TEXT_SUBSTRING_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING")),this.appendValueInput("FROM").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_FROM")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("TO").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TO")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SUBSTRING_TOOLTIP"))}},Blockly.Arduino.text_search=function(){var o=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),l=this.getFieldValue("POSITION"),t=RoboBlocks.findPinMode(o);return t.code,o=t.pin,(t=RoboBlocks.findPinMode(e)).code,e=t.pin,["FIRST"===l?e+".indexOf("+o+")":e+".lastIndexOf("+o+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_search={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_search"),examples:["text_search_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_SEARCH","LANG_TEXT_IN","LANG_TEXT_FIRST","LANG_TEXT_LAST","LANG_TEXT_SEARCH_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH")),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_IN")),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_TEXT_FIRST"),"FIRST"],[RoboBlocks.locales.getKey("LANG_TEXT_LAST"),"LAST"]]),"POSITION"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_SEARCH_TOOLTIP"))}},Blockly.Arduino.text_contains=function(){var o=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),l=RoboBlocks.findPinMode(o);return l.code,o=l.pin,(l=RoboBlocks.findPinMode(e)).code,["("+(e=l.pin)+".indexOf("+o+")>0)",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_contains={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_contains"),examples:["text_contains_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CONTAINS","LANG_TEXT_EXPRESSION","LANG_TEXT_CONTAINS_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING2").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS")),this.appendValueInput("STRING1").appendField(RoboBlocks.locales.getKey("LANG_TEXT_EXPRESSION")),this.setInputsInline(!0),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CONTAINS_TOOLTIP"))}},Blockly.Arduino.text_to_text=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),e=this.getFieldValue("CAST")||"",l="";return[l+="char"==e?"("+e+")("+o+")":"String("+o+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_to_text={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_to_text"),examples:["text_to_text_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_CAST","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_CHAR","LANG_TEXT_CAST_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"]]),"CAST").setCheck(Number),this.setOutput(!0,String),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CAST_TOOLTIP"))}},Blockly.Arduino.text_to_csv=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),e=this.getInputTargetBlock("VALUE"),l=this.getFieldValue("LENGTH"),t=this.getFieldValue("DECIMAL"),s="";if(null!==e)if(e.type.includes("math_1DArray_constructor")){Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]="String toCSV"+e.itemCount_+"(";var i=0;for(i=0;i<e.itemCount_;i++)Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]+="float data"+i+",";for(Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]+="int l,int d){\n",i=0,Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]+='  char c[l+1];\n  String s="";\n  dtostrf(data'+i+",l,d,c);\n  s=String(c);\n",i=1;i<e.itemCount_;i++)Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]+="  dtostrf(data"+i+',l,d,c);\n  s+=","+String(c);\n';Blockly.Arduino.definitions_["define_toCSV"+e.itemCount_]+='  s.replace(" ","");\n  return s;\n}\n',s="toCSV("+o.substring(1,o.length-1)+","+l+","+t+")"}else"variables_get"===e.type&&(Blockly.Arduino.definitions_.define_toCSV='String toCSV(float* data,int data_length,int l,int d){\n  char c[l+1];\n  String s="";\n  dtostrf(data[0],l,d,c);\n  s=String(c);\n  for(int i=1;i<data_length;i++){\n    dtostrf(data[i],l,d,c);\n    s+=","+String(c);\n  }\n  s.replace(" ","");\n  return s;\n}\n',s="toCSV("+o+","+RoboBlocks.variables[o][3]+","+l+","+t+")");return[s,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_to_csv={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_to_csv"),examples:["text_to_csv_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_FORMAT","LANG_TEXT_CSV","LANG_TEXT_CSV_LENGTH","LANG_TEXT_CSV_DECIMAL","LANG_TEXT_CSV_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_TEXT_CSV")).appendField(RoboBlocks.locales.getKey("LANG_TEXT_FORMAT")).appendField(new Blockly.FieldNumber(8,1,20,1),"LENGTH").appendField(".").appendField(new Blockly.FieldNumber(2,1,10,1),"DECIMAL").setCheck("Array"),this.setOutput(!0),this.setInputsInline(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_CSV_TOOLTIP"))}},Blockly.Arduino.text_to_number=function(){return[Blockly.Arduino.valueToCode(this,"STRING",Blockly.Arduino.ORDER_NONE)+"."+(this.getFieldValue("CAST")||""),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text_to_number={category:RoboBlocks.locales.getKey("LANG_CATEGORY_TEXT"),tags:["text"],helpUrl:RoboBlocks.getHelpUrl("text_to_number"),examples:["text_to_text_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_TEXT,colour:RoboBlocks.LANG_COLOUR_TEXT,keys:["LANG_TEXT_NUMBER_CAST","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_CHAR"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING").appendField(RoboBlocks.locales.getKey("LANG_TEXT_NUMBER_CAST")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"toInt()"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"toFloat()"]]),"CAST").setCheck(String),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_TEXT_NUMBER_CAST_TOOLTIP"))}},Blockly.Arduino.variables_get=function(){var o=this.getFieldValue("VAR")||"";return void 0!==RoboBlocks.variables[this.getFieldValue("VAR")]&&(this.var_type=RoboBlocks.variables[this.getFieldValue("VAR")][0]),[o,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.variables_get={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_get"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_GET","LANG_VARIABLES_GET_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("DUMMY").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.setOutput(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GET_TOOLTIP"))},getVariables:function(){var o=Blockly.Variables.allVariables(),e=[];if(0<o.length)for(var l in o)e.push([o[l],o[l]]);else e.push(["",""]);return e},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=[]);for(var o=Blockly.Variables.allVariables(),e=0;e<o.length;e++)o[e]===this.last_variables[e]&&o.length===this.last_variables.length||(this.getInput("DUMMY").removeField("VAR"),this.getInput("DUMMY").appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.setFieldValue(this.last_variable,"VAR"),this.last_variables=o);try{if(this.exists())if("value"===this.getFieldValue("VAR")){for(var l=!1,t=this.getParent();null!==t;){if(console.log(t),"communications_wifi_iot_thingsboard_rpc"===t.type){l=!0;break}if("communications_wifi_iot_amazon_echo"===t.type){l=!0;break}t=t.getParent()}l?this.setWarningText(null):this.setWarningText(Facilino.locales.getKey("LANG_CONTROLS_REMOTE_GET_WARNING"))}else this.setWarningText(null);else this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(o){}}},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setTitleValue(e,"VAR")},exists:function(){for(var o=Blockly.Variables.allVariables(),e=0;e<o.length;e++)if(o[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_set=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"",e=this.getFieldValue("VAR")||"",l="",t=RoboBlocks.findPinMode(o);return l+=t.code,o=t.pin,l+=JST.variables_set({varName:e,varValue:o})},Blockly.Blocks.variables_set={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_set"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_SET","LANG_VARIABLES_SET_AS","LANG_VARIABLES_SET_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_TOOLTIP"))},getVariables:function(){var o=Blockly.Variables.allVariables(),e=[];if(0<o.length)for(var l in o)e.push([o[l],o[l]]);else e.push(["",""]);return e},onchange:function(){if(this.workspace){this.last_field_value=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var o=Blockly.Variables.allVariables();for(var e in o)Blockly.Variables.allVariables()[e]!==this.last_variables[e]&&(this.getInput("VALUE").removeField("VAR"),this.new_field=new Blockly.FieldDropdown(this.getVariables()),this.new_field.setValue(this.last_field_value),this.getInput("VALUE").insertFieldAt(1,this.new_field,"VAR"),this.last_variables=Blockly.Variables.allVariables());try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(o){}}},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setTitleValue(e,"VAR")},exists:function(){for(var o in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[o]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_local=function(){var o,e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR")||"",t="",s=!1,i=RoboBlocks.findPinMode(e);for(var _ in t+=i.code,e=i.pin,Blockly.Arduino.definitions_)if(0<=Blockly.Arduino.definitions_[_].search(e+" \\(")){s=!0;break}if(0<=e.search('"')||0<=e.search("substring\\("))t+=(o="String")+" "+l+"="+e+";\n";else if(s)for(_ in Blockly.Arduino.definitions_)0<=Blockly.Arduino.definitions_[_].search(e)&&(t+=(o="int"===Blockly.Arduino.definitions_[_].substring(0,3)||"//b"===Blockly.Arduino.definitions_[_].substring(0,3)?"int *"===Blockly.Arduino.definitions_[_].substring(0,5)||"int _"===Blockly.Arduino.definitions_[_].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[_].substring(0,3)?"String":"")+" "+l+"="+e+";\n");else"{"===e[0]?(t+=(o="int *")+l+"=(int*)malloc(3*sizeof(int));\n",t+=l+"[0]="+(e=(e=(e=e.replace("{","")).replace("}","")).split(","))[0]+";\n"+l+"[1]="+e[1]+";\n"+l+"[2]="+e[2]+";\n"):this.isVariable(e)?t+=(o=RoboBlocks.variables[e][0])+" "+l+"="+e+";\n":0<=e.search("readJoystick")?(t+=(o="int *")+l+"=(int*)malloc(3*sizeof(int));\n",t+=l+"="+e+";\n"):0<=e.search("analogRead")||0<=e.search("digitalRead")||0<=e.search("Distanc")||!isNaN(parseFloat(e))||0<=e.search("random")||0<=e.search("map")||0<=e.search("\\[")||0<=e.search("abs")||0<=e.search("sqrt")||0<=e.search("log")||0<=e.search("exp")||0<=e.search("pow")||e.search("\\+")?t+=(o="int")+" "+l+"="+e+";\n":t+=(o="unknown")+" "+l+"="+e+";\n";return RoboBlocks.variables[l]=[o,"local","variable"],RoboBlocks.variables["analogRead("+l+")"]=[o,"local","variable"],RoboBlocks.variables["digitalRead("+l+")"]=[o,"local","variable"],t},Blockly.Blocks.variables_local={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_local"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_LOCAL","LANG_VARIABLES_LOCAL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setFieldValue(e,"VAR")},isVariable:function(o){for(var e in Blockly.Variables.allVariables())if(Blockly.Variables.allVariables()[e]===o)return!0;return!1},validName:function(o){if(o&&0<o.length){for(var e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(o=(o=(o=(o=(o=(o=(o=(o=o.replace(/([ ])/g,"_")).replace(/([áàâä])/g,"a")).replace(/([éèêë])/g,"e")).replace(/([íìîï])/g,"i")).replace(/([óòôö])/g,"o")).replace(/([úùûü])/g,"u")).replace(/([ñ])/g,"n")).replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|<>\-\&\Ç\%\=\~\{\}\¿\¡\"\@\:\;\-\"\·\|\º\ª\¨\'\·\̣\─\ç\`\´\¨\^])/g,""),e=0;e<o.length&&!isNaN(parseFloat(o[e]));)o=o.substring(1,o.length);for(var l in Blockly.Arduino.RESERVED_WORDS_){if(o===Blockly.Arduino.RESERVED_WORDS_.split(",")[l]){this.setWarningText("Reserved word"),o="";break}this.setWarningText(null)}}return o},onchange:function(){if(this.last_variable!==this.getFieldValue("VAR")){var o=this.getFieldValue("VAR");o=this.validName(o);try{this.setFieldValue(o,"VAR")}catch(o){}this.last_variable=o}}},Blockly.Arduino.variables_local_type=function(){var o=this.getFieldValue("VAR_TYPE"),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR")||"",t="";return t+=o+" "+l+"="+e+";\n",RoboBlocks.variables[l]=[o,"local","variable"],RoboBlocks.variables["analogRead("+l+")"]=[o,"local","variable"],RoboBlocks.variables["digitalRead("+l+")"]=[o,"local","variable"],t},Blockly.Blocks.variables_local_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_local_type"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_LOCAL","LANG_VARIABLES_LOCAL_TYPE","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_LOCAL_TOOLTIP2"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP2"))},getVars:Blockly.Blocks.variables_local.getVars,renameVar:Blockly.Blocks.variables_local.renameVar,isVariable:Blockly.Blocks.variables_local.isVariable,validName:Blockly.Blocks.variables_local.validName,onchange:Blockly.Blocks.variables_local.onchange},Blockly.Arduino.variables_global=function(){var o,e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR")||"",t=!1,s=RoboBlocks.findPinMode(e);for(var i in Blockly.Arduino.setups_["pinMode"+e]=s.code,e=s.pin,Blockly.Arduino.definitions_)if(0<=Blockly.Arduino.definitions_[i].search(e+" \\(")){t=!0;break}if(0<=e.search('"')||0<=e.search("substring\\("))o="String",Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+"="+e+";";else if(t){for(i in Blockly.Arduino.definitions_)if(0<=Blockly.Arduino.definitions_[i].search(e)){o="int"===Blockly.Arduino.definitions_[i].substring(0,3)||"//b"===Blockly.Arduino.definitions_[i].substring(0,3)?"int *"===Blockly.Arduino.definitions_[i].substring(0,5)||"int _"===Blockly.Arduino.definitions_[i].substring(0,5)?"int *":"int":"Str"===Blockly.Arduino.definitions_[i].substring(0,3)?"String":"",Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n";break}}else"{"===e[0]?(o="int *",e=(e=(e=e.replace("{","")).replace("}","")).split(","),Blockly.Arduino.definitions_["declare_var"+l]=o+l+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+l]=l+"[0]="+e[0]+";\n  "+l+"[1]="+e[1]+";\n  "+l+"[2]="+e[2]+";\n"):this.isVariable(e)?(o=RoboBlocks.variables[e][0],Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n"):0<=e.search("readJoystick")?(o="int *",Blockly.Arduino.definitions_["declare_var"+l]=o+l+"=(int*)malloc(3*sizeof(int));\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n"):0<=e.search("analogRead")||0<=e.search("digitalRead")||0<=e.search("Distanc")||!isNaN(parseFloat(e))||0<=e.search("random")||0<=e.search("map")||0<=e.search("\\[")||0<=e.search("abs")||0<=e.search("sqrt")||0<=e.search("log")||0<=e.search("log")||0<=e.search("exp")||0<=e.search("pow")||e.search("\\+")?(o="int",isNaN(parseFloat(e))?(0<=e.search("analogRead")||0<=e.search("digitalRead")||0<=e.search("Distanc")||0<=e.search("random")||0<=e.search("map")||0<=e.search("\\[")||0<=e.search("abs")||0<=e.search("sqrt")||0<=e.search("log")||0<=e.search("log")||0<=e.search("exp")||0<=e.search("pow")||e.search("\\+"))&&(Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n"):Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+"="+e+";\n"):(o="unknown",Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n");return RoboBlocks.variables[l]=[o,"global","variable"],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","variable"],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","variable"],""},Blockly.Blocks.variables_global={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_global"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_GLOBAL","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_GLOBAL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP"))},getVars:Blockly.Blocks.variables_local.getVars,renameVar:Blockly.Blocks.variables_local.renameVar,isVariable:Blockly.Blocks.variables_local.isVariable,validName:Blockly.Blocks.variables_local.validName,onchange:Blockly.Blocks.variables_local.onchange},Blockly.Arduino.variables_global_type=function(){var o=this.getFieldValue("VAR_TYPE"),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR"),t=(l=this.getFieldValue("VAR")||"",RoboBlocks.findPinMode(e));return t.code,e=t.pin,Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n",RoboBlocks.variables[l]=[o,"global","variable"],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","variable"],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","variable"],""},Blockly.Blocks.variables_global_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_global_type"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_GLOBAL","LANG_VARIABLES_GLOBAL_TYPE","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_GLOBAL_TOOLTIP2"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_STRING"),"String"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_CHAR"),"char"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setFieldValue(e,"VAR")},isVariable:Blockly.Blocks.variables_local.isVariable,onchange:Blockly.Blocks.variables_local.onchange,validName:Blockly.Blocks.variables_local.validName},Blockly.Arduino.variables_global_volatile_type=function(){var o=this.getFieldValue("VAR_TYPE"),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR"),t=(l=this.getFieldValue("VAR")||"",RoboBlocks.findPinMode(e));return t.code,e=t.pin,Blockly.Arduino.definitions_["declare_var"+l]="volatile "+o+" "+l+";\n",Blockly.Arduino.setups_["define_var"+l]=l+"="+e+";\n",RoboBlocks.variables[l]=["volatile "+o,"global","variable"],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","variable"],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","variable"],""},Blockly.Blocks.variables_global_volatile_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),helpUrl:RoboBlocks.getHelpUrl("variables_global_volatile_type"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_GLOBAL_VOLATILE","LANG_VARIABLES_GLOBAL_TYPE","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_VOLATILE_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setFieldValue(e,"VAR")},isVariable:Blockly.Blocks.variables_local.isVariable,onchange:Blockly.Blocks.variables_local.onchange,validName:Blockly.Blocks.variables_local.validName},Blockly.Arduino.variables_get_1Darray=function(){var o=this.getFieldValue("VAR")||"",e=Blockly.Arduino.valueToCode(this,"INDEX",Blockly.Arduino.ORDER_NONE);return void 0!==RoboBlocks.variables[this.getFieldValue("VAR")]&&(this.var_type=RoboBlocks.variables[this.getFieldValue("VAR")][0]),[o+="["+e+"]",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.variables_get_1Darray={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_get_1Darray"),tags:["variables"],examples:["array_example1.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_GET","LANG_VARIABLES_ARRAY_INDEX","LANG_VARIABLES_GET_TOOLTIP","LANG_VARIABLES_CALL_WITHOUT_DEFINITION"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("INDEX").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_INDEX")),this.setOutput(!0),this.setInputsInline(!0),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_GET_TOOLTIP"))},getVariables:function(){var o=Blockly.Variables.allVariables(),e=[];if(0<o.length)for(var l in o)e.push([o[l],o[l]]);else e.push(["",""]);return e},onchange:function(){if(this.workspace){this.last_variable=this.getFieldValue("VAR"),this.last_index=this.getFieldValue("INDEX"),this.last_variables||(this.last_variables=[]);for(var o=Blockly.Variables.allVariables(),e=0;e<o.length;e++)o[e]===this.last_variables[e]&&o.length===this.last_variables.length||(this.getInput("INDEX").removeField("VAR"),this.new_field=new Blockly.FieldDropdown(this.getVariables()),this.new_field.setValue(this.last_variable),this.getInput("INDEX").insertFieldAt(1,this.new_field,"VAR"),this.last_variables=Blockly.Variables.allVariables());try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(o){}}},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setTitleValue(e,"VAR")},exists:function(){for(var o=Blockly.Variables.allVariables(),e=0;e<o.length;e++)if(o[e]===this.getFieldValue("VAR"))return!0;return!1}},Blockly.Arduino.variables_set_1Darray=function(){var o=Blockly.Arduino.valueToCode(this,"INDEX",Blockly.Arduino.ORDER_NONE)||"",e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"",l=this.getFieldValue("VAR")||"",t="";return l+="["+o+"]",t+=JST.variables_set({varName:l,varValue:e})},Blockly.Blocks.variables_set_1Darray={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_set_1Darray"),tags:["variables"],examples:["array_example1.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_SET","LANG_VARIABLES_ARRAY_INDEX","LANG_VARIABLES_SET_AS","LANG_VARIABLES_SET_TOOLTIP","LANG_VARIABLES_CALL_WITHOUT_DEFINITION"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("INDEX").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET")).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_INDEX")).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_TOOLTIP"))},getVariables:Blockly.Blocks.variables_set.getVariables,renameVar:Blockly.Blocks.variables_set.renameVar,exists:Blockly.Blocks.variables_set.exists,onchange:function(){if(this.workspace){this.last_field_value=this.getFieldValue("VAR"),this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var o=Blockly.Variables.allVariables();for(var e in o)Blockly.Variables.allVariables()[e]!==this.last_variables[e]&&(this.getInput("INDEX").removeField("VAR"),this.new_field=new Blockly.FieldDropdown(this.getVariables()),this.new_field.setValue(this.last_field_value),this.getInput("INDEX").insertFieldAt(1,this.new_field,"VAR"),this.last_variables=Blockly.Variables.allVariables());try{this.exists()?this.setWarningText(null):this.setWarningText(RoboBlocks.locales.getKey("LANG_VARIABLES_CALL_WITHOUT_DEFINITION"))}catch(o){}}}},Blockly.Arduino.variables_local_1DArray=function(){var o="int",e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),l=this.getFieldValue("VAR")||"",t=this.getInputTargetBlock("VALUE"),s=null,i=0,_="";if(null!==t){if(t.type.includes("math_1DArray_constructor"))_+=o+" "+l+"["+(i=t.itemCount_)+"]="+e+";\n";else if("variables_get"===t.type){var n=RoboBlocks.variables[t.getFieldValue("VAR")];if("1DArray"===n[2]){var a;for(_+=(o=n[0])+" "+l+"["+(i=window.parseInt(n[3]))+"]={"+e+"[0]",a=1;a<i;a++)_+=","+e+"["+a+"]";_+="};\n"}else s="Incorrect variable assigment"}else console.log(t.type);RoboBlocks.variables[l]=[o,"local","1DArray",i,4*i],this.setWarningText(s)}return _},Blockly.Blocks.variables_local_1DArray={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_local_1DArray"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_ARRAY_LOCAL","LANG_VARIABLES_LOCAL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_SET_AS")).setCheck("Array"),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_LOCAL_TOOLTIP"))},getVars:Blockly.Blocks.variables_local.getVars,renameVar:Blockly.Blocks.variables_local.renameVar,isVariable:Blockly.Blocks.variables_local.isVariable,validName:Blockly.Blocks.variables_local.validName,onchange:Blockly.Blocks.variables_local.onchange},Blockly.Arduino.variables_local_1DArray_type=function(){var o=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),e=this.getFieldValue("VAR_TYPE"),l=this.getFieldValue("VAR")||"",t=this.getInputTargetBlock("VALUE"),s="";if(null!==t){var i=t.itemCount_,_=i,n=null;if(t.type.includes("math_1DArray_constructor"))i=t.itemCount_,"int"===e?"ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor?_=2*i:"ESP8266"!==profiles.processor&&"ESP32"!==profiles.processor||(_=4*i):_="short"===e?2*i:"long"===e?4*i:"byte"===e?i:"bool"===e?i:"float"===e?4*i:i;else if("variables_get"===t.type){var a=RoboBlocks.variables[t.getFieldValue("VAR")];"1DArray"===a[2]?(e=a[0],i=a[3],"int"===e&&(_="ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor?2*i:"ESP8266"===profiles.processor||"ESP32"===profiles.processor?4*i:"short"===e?2*i:"long"===e?4*i:"byte"===e?i:"bool"===e?i:"float"===e?4*i:i)):n="Incorrect variable assigment"}else console.log(t.type);s+=e+" "+l+"["+t.itemCount_+"]="+o+";\n",RoboBlocks.variables[l]=[e,"local","1DArray",i,_],this.setWarningText(n)}return s},Blockly.Blocks.variables_local_1DArray_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_local_1DArray_type"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_ARRAY_LOCAL","LANG_VARIABLES_LOCAL_TYPE","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_LOCAL_TOOLTIP2"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_LOCAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_EQUALS")).setCheck("Array"),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_TOOLTIP2"))},getVars:Blockly.Blocks.variables_local.getVars,renameVar:Blockly.Blocks.variables_local.renameVar,isVariable:Blockly.Blocks.variables_local.isVariable,validName:Blockly.Blocks.variables_local.validName,onchange:Blockly.Blocks.variables_local.onchange},Blockly.Arduino.variables_global_1DArray=function(){var o,e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),l=this.getFieldValue("VAR")||"",t=this.getInputTargetBlock("VALUE");return null!==t&&(o="int",Blockly.Arduino.definitions_["declare_var"+l]="int "+l+"["+t.itemCount_+"]="+e+";\n",RoboBlocks.variables[l]=[o,"global","1DArray"],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","1DArray",t.itemCount_,4*t.itemCount_],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","1DArray",t.itemCount_,4*t.itemCount_]),""},Blockly.Blocks.variables_global_1DArray={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_global_1DArray"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_ARRAY_GLOBAL","LANG_VARIABLES_ARRAY_GLOBAL_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_LOCAL_EQUALS")).setCheck("Array"),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL_TOOLTIP"))},getVars:Blockly.Blocks.variables_local.getVars,renameVar:Blockly.Blocks.variables_local.renameVar,isVariable:Blockly.Blocks.variables_local.isVariable,validName:Blockly.Blocks.variables_local.validName,onchange:Blockly.Blocks.variables_local.onchange},Blockly.Arduino.variables_global_1DArray_type=function(){var o=this.getFieldValue("VAR_TYPE"),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE),l=this.getFieldValue("VAR")||"",t=this.getInputTargetBlock("VALUE");if(null!==t){l=this.getFieldValue("VAR")||"";var s=RoboBlocks.findPinMode(e);s.code,e=s.pin,Blockly.Arduino.definitions_["declare_var"+l]=o+" "+l+"["+t.itemCount_+"]="+e+";\n";var i=t.itemCount_;"int"===o?"ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor?i=2*t.itemCount_:"ESP8266"!==profiles.processor&&"ESP32"!==profiles.processor||(i=4*t.itemCount_):i="short"===o?2*t.itemCount_:"long"===o?4*t.itemCount_:"byte"===o?t.itemCount_:"bool"===o?t.itemCount_:"float"===o?4*t.itemCount_:t.itemCount_,RoboBlocks.variables[l]=[o,"global","1DArray",t.itemCount_,i],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","1DArray",t.itemCount_,i],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","1DArray",t.itemCount_,i]}return""},Blockly.Blocks.variables_global_1DArray_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_global_1DArray_type"),tags:["variables"],examples:["variables_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_ARRAY_GLOBAL","LANG_VARIABLES_GLOBAL_TYPE","LANG_VARIABLES_TYPE_STRING","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_ARRAY_GLOBAL_TOOLTIP2"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")).setCheck("Array"),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL_TOOLTIP2"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setFieldValue(e,"VAR")},isVariable:Blockly.Blocks.variables_local.isVariable,onchange:Blockly.Blocks.variables_local.onchange,validName:Blockly.Blocks.variables_local.validName},Blockly.Arduino.variables_global_volatile_1DArray_type=function(){var o=this.getFieldValue("VAR_TYPE"),e=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT),l=this.getFieldValue("VAR"),t=this.getInputTargetBlock("VALUE"),s=(l=this.getFieldValue("VAR")||"",RoboBlocks.findPinMode(e));if(s.code,e=s.pin,null!==t){Blockly.Arduino.definitions_["declare_var"+l]="volatile "+o+" "+l+"["+t.itemCount_+"]="+e+";\n";var i=t.itemCount_;"int"===o?"ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor?i=2*t.itemCount_:"ESP8266"!==profiles.processor&&"ESP32"!==profiles.processor||(i=4*t.itemCount_):i="short"===o?2*t.itemCount_:"long"===o?4*t.itemCount_:"byte"===o?t.itemCount_:"bool"===o?t.itemCount_:"float"===o?4*t.itemCount_:t.itemCount_,RoboBlocks.variables[l]=["volatile "+o,"global","1DArray",t.itemCount_,i],RoboBlocks.variables["analogRead("+l+")"]=[o,"global","1DArray",t.itemCount_,i],RoboBlocks.variables["digitalRead("+l+")"]=[o,"global","1DArray",t.itemCount_,i]}return""},Blockly.Blocks.variables_global_volatile_1DArray_type={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_ARRAYS"),helpUrl:RoboBlocks.getHelpUrl("variables_global_volatile_1DArray_type"),tags:["variables"],examples:["variables_global_volatile_type_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,keys:["LANG_VARIABLES_ARRAY_GLOBAL_VOLATILE","LANG_VARIABLES_GLOBAL_TYPE","LANG_VARIABLES_TYPE_INTEGER","LANG_VARIABLES_TYPE_INTEGER_LONG","LANG_VARIABLES_TYPE_INTEGER_SHORT","LANG_VARIABLES_TYPE_BYTE","LANG_VARIABLES_TYPE_BOOL","LANG_VARIABLES_TYPE_FLOAT","LANG_VARIABLES_GLOBAL_EQUALS","LANG_VARIABLES_ARRAY_GLOBAL_VOLATILE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendValueInput("VALUE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL_VOLATILE")).appendField(new Blockly.FieldTextInput(""),"VAR").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_TYPE")).appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER"),"int"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_SHORT"),"short"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_INTEGER_LONG"),"long"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BYTE"),"byte"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_BOOL"),"bool"],[RoboBlocks.locales.getKey("LANG_VARIABLES_TYPE_FLOAT"),"float"]]),"VAR_TYPE").appendField(RoboBlocks.locales.getKey("LANG_VARIABLES_GLOBAL_EQUALS")).setCheck("Array"),this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_VARIABLES_ARRAY_GLOBAL_VOLATILE_TOOLTIP"))},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(o,e){Blockly.Names.equals(o,this.getFieldValue("VAR"))&&this.setFieldValue(e,"VAR")},isVariable:Blockly.Blocks.variables_local.isVariable,onchange:Blockly.Blocks.variables_local.onchange,validName:Blockly.Blocks.variables_local.validName},Blockly.Arduino.controls_execute=function(){var o=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC),e="";if((o=(o=o.replace(/^"/,"")).replace(/"$/g,"")).match(/^#include /)){var l=JST.controls_execute({content:o});"define_include"in Blockly.Arduino.definitions_?Blockly.Arduino.definitions_.define_include+=l:Blockly.Arduino.definitions_.define_include=l}else e+=JST.controls_execute({content:o});return e},Blockly.Blocks.controls_execute={category:RoboBlocks.locales.getKey("LANG_CATEGORY_CONTROLS"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_CONTROL"),helpUrl:RoboBlocks.getHelpUrl("controls_execute"),examples:["controls_execute_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_CONTROL,colour:RoboBlocks.LANG_COLOUR_CONTROL,keys:["LANG_CONTROLS_EXECUTE","LANG_CONTROLS_EXECUTE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE")),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_CONTROLS_EXECUTE_TOOLTIP"))}},Blockly.Arduino.button=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,RoboBlocks.isVariable(o)?e+="pinMode("+o+",INPUT);\n":Blockly.Arduino.setups_["setup_button_"+o]="pinMode("+o+",INPUT);\n",[e+="digitalRead("+o+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUTTON"),tags:["input","output","button"],helpUrl:RoboBlocks.getHelpUrl("button"),examples:["button_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON,keys:["LANG_BQ_BUTTON","LANG_BQ_BUTTON_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(["DIGITAL_PIN",Number]).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.button_case=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);e+=l.code,o=l.pin,RoboBlocks.isVariable(o)?e+="pinMode("+o+",INPUT);\n":Blockly.Arduino.setups_["setup_button_"+o]="pinMode("+o+",INPUT);\n";var t="",s="";return t+=Blockly.Arduino.statementToCode(this,"PRESSED"),s+=Blockly.Arduino.statementToCode(this,"NOT_PRESSED"),e+="if (digitalRead("+o+")==LOW){\n"+(t=t.replace(/&quot;/g,'"'))+"\n}\nelse{\n"+(s=s.replace(/&quot;/g,'"'))+"\n}\n"},Blockly.Blocks.button_case={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUTTON"),tags:["input","output","button"],helpUrl:RoboBlocks.getHelpUrl("button_case"),examples:["button_case_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON,keys:["LANG_BQ_BUTTON","LANG_BQ_BUTTON_PIN","LANG_BUTTON_PRESSED","LANG_BUTTON_NOT_PRESSED","LANG_BQ_BUTTON_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(["DIGITAL_PIN",Number]).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.appendStatementInput("PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_PRESSED")),this.appendStatementInput("NOT_PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_NOT_PRESSED")),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TOOLTIP"))}},Blockly.Arduino.button_long_short=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);e+=l.code,o=l.pin,RoboBlocks.isVariable(o)?e+="pinMode("+o+",INPUT);\n":Blockly.Arduino.setups_["setup_button_"+o]="pinMode("+o+",INPUT);\n",Blockly.Arduino.definitions_["declare_var_button_active_"+o]="boolean _buttonActive_"+o+"=false;\n",Blockly.Arduino.definitions_["declare_var_long_press_active_"+o]="boolean _longPressActive_"+o+"=false;\n",Blockly.Arduino.definitions_["declare_var_button_timer_"+o]="long _buttonTimer_"+o+"=0;\n";var t="",s="";t+=Blockly.Arduino.statementToCode(this,"LONG_PRESSED"),s+=Blockly.Arduino.statementToCode(this,"SHORT_PRESSED"),t=t.replace(/&quot;/g,'"'),s=s.replace(/&quot;/g,'"');for(var i=this.getParent(),_=!1;null!==i;){if("attachInterrupt"===i.type){_=!0;break}i=i.getParent()}return!0===_?"ESP32"===profiles.processor?(Blockly.Arduino.definitions_["declare_var_ui_timer_"+o]="hw_timer_t* _uiTimer_"+o+"=NULL;\n",Blockly.Arduino.setups_["setup_button_timer_"+o]="_uiTimer_"+o+"=timerBegin(1,80,true);\n  timerAttachInterrupt(_uiTimer_"+o+",&_uiTimerInterrupt_"+o+", true);\n  timerAlarmWrite(_uiTimer_"+o+",("+this.getFieldValue("TIME")+")*1000,true);\n  timerAlarmEnable(_uiTimer_"+o+");\n  timerStop(_uiTimer_"+o+");\n",Blockly.Arduino.definitions_["define_isr_timer_"+o]="void IRAM_ATTR _uiTimerInterrupt_"+o+"(){\n  if (_buttonActive_"+o+"==true){\n  _longPressActive_"+o+"=true;\n"+t+" }\n timerStop(_uiTimer_"+o+");\n }\n",e+="if (digitalRead("+o+")==LOW) {\n    if (_buttonActive_"+o+"==false) {\n      _buttonActive_"+o+"=true;\n      timerStart(_uiTimer_"+o+");\n      _buttonTimer_"+o+"=millis();\n    }\n    }\n    else {\n    if (_buttonActive_"+o+"== true){\n      if (_longPressActive_"+o+"==true){\n      _longPressActive_"+o+"=false;\n    }\n     else  if ((millis()-_buttonTimer_"+o+")>100){\n"+s+"\n    }\n    }\n    _buttonActive_"+o+"=false;\n    }\n"):e+="if (digitalRead("+o+")==LOW) {\n    if (_buttonActive_"+o+"==false) {\n      _buttonActive_"+o+"=true;\n      _buttonTimer_"+o+"=millis();\n    }\n    else {\n    if (_buttonActive_"+o+"== true){\n      if ((millis()-_buttonTimer_"+o+")>"+this.getFieldValue("TIME")+"){\n"+t+"\n    }\n      else  if ((millis()-_buttonTimer_"+o+")>100){\n"+s+"\n    }\n    _buttonActive_"+o+"=false;\n    }\n  }\n":e+="if (digitalRead("+o+")==LOW) {\n    if (_buttonActive_"+o+"==false) {\n      _buttonActive_"+o+"=true;\n      _buttonTimer_"+o+"=millis();\n    }\n    if (((millis()-_buttonTimer_"+o+">"+this.getFieldValue("TIME")+"))&&(_longPressActive_"+o+"==false)){\n      _longPressActive_"+o+"=true;\n"+t+"\n}\n  }\n else {\n    if (_buttonActive_"+o+"== true){\n      if (_longPressActive_"+o+"==true){\n        _longPressActive_"+o+"=false;\n      }\n else  if ((millis()-_buttonTimer_"+o+")>100){\n"+s+"\n}\n      _buttonActive_"+o+"=false;\n    }\n  }\n",e},Blockly.Blocks.button_long_short={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUTTON"),tags:["input","output","button"],helpUrl:RoboBlocks.getHelpUrl("button_long_short"),examples:["button_case_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON,keys:["LANG_BQ_BUTTON","LANG_BQ_BUTTON_PIN","LANG_BUTTON_LONG_PRESSED","LANG_BUTTON_SHORT_PRESSED","LANG_BQ_BUTTON_LONG_SHORT_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON")).appendField(new Blockly.FieldImage("img/blocks/pushbutton.png",52*options.zoom,24*options.zoom)).setCheck(["DIGITAL_PIN",Number]).appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_TIME")).appendField(new Blockly.FieldNumber("1000","200","5000"),"TIME").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.appendStatementInput("LONG_PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_LONG_PRESSED")),this.appendStatementInput("SHORT_PRESSED").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_BUTTON_SHORT_PRESSED")),this.setPreviousStatement(!0,"code"),this.setInputsInline(!1),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_BUTTON_LONG_SHORT_TOOLTIP"))}},Blockly.Arduino.zum_button=function(){var o=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),e="",l=RoboBlocks.findPinMode(o);return e+=l.code,o=l.pin,pullup="INPUT_PULLUP",RoboBlocks.isVariable(o)?e+="pinMode("+o+",INPUT_PULLUP);\n":Blockly.Arduino.setups_["setup_button_"+o]="pinMode("+o+",INPUT_PULLUP);\n",[e+="digitalRead("+o+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_button={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUTTON"),tags:["input","output","button"],helpUrl:RoboBlocks.getHelpUrl("zum_button"),examples:["zum_button_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON,keys:["LANG_ZUM_BUTTON","LANG_ZUM_BUTTON_PIN","LANG_ZUM_BUTTON_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUTTON),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON")).appendField(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(["DIGITAL_PIN",Number]),this.appendDummyInput().appendField("pull-up?").appendField(new Blockly.FieldCheckbox("FALSE"),"PULLUP").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.locales.getKey("LANG_ZUM_BUTTON_TOOLTIP")),this.setInputsInline(!1)}},Blockly.Arduino.inout_spi_begin=function(){var o=Blockly.Arduino.valueToCode(this,"BAUDRATE",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.include_spi="#include <SPI.h>\n","SPI.beginTransaction(SPISettings("+o+","+this.getFieldValue("ORDER")+","+this.getFieldValue("MODE")+"));\n"},Blockly.Blocks.inout_spi_begin={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),tags:["input","output","spi"],helpUrl:RoboBlocks.getHelpUrl("inout_spi_begin"),examples:["inout_spi_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,keys:["LANG_SPI_BEGIN","LANG_SPI_BAUDRATE","LANG_SPI_BEGIN_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.appendValueInput("BAUDRATE").appendField(RoboBlocks.locales.getKey("LANG_SPI_BEGIN")).appendField(RoboBlocks.locales.getKey("LANG_SPI_BAUDRATE")).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["MSB","MSBFIRST"],["LSB","LSBFIRST"]]),"ORDER").setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["MODE0","SPI_MODE0"],["MODE1","SPI_MODE1"],["MODE2","SPI_MODE2"],["MODE3","SPI_MODE3"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_SPI_BEGIN_TOOLTIP"))}},Blockly.Arduino.inout_spi_transfer=function(){var o=Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC),e=this.getFieldValue("MODE");Blockly.Arduino.definitions_.include_spi="#include <SPI.h>\n";var l="";return"1"===e?l+="SPI.transfer("+o+");\n":"2"===e&&(l+="SPI.transfer16("+o+");\n"),l},Blockly.Blocks.inout_spi_transfer={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),tags:["input","output","spi"],helpUrl:RoboBlocks.getHelpUrl("inout_spi_transfer"),examples:["inout_spi_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,keys:["LANG_SPI_TRANSFER","LANG_SPI_TRANSFER_ONE_BYTE","LANG_SPI_TRANSFER_TWO_BYTES","LANG_SPI_TRANSFER_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.appendValueInput("DATA").appendField(RoboBlocks.locales.getKey("LANG_SPI_TRANSFER")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_ONE_BYTE"),"1"],[RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_TWO_BYTES"),"2"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!1,null),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setInputsInline(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_TOOLTIP"))}},Blockly.Arduino.inout_spi_transfer_recv=function(){var o=Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC),e=this.getFieldValue("MODE");Blockly.Arduino.definitions_.include_spi="#include <SPI.h>\n";var l="";return"1"===e?l+="SPI.transfer("+o+")":"2"===e&&(l+="SPI.transfer16("+o+")"),[l,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_spi_transfer_recv={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),tags:["input","output","spi"],helpUrl:RoboBlocks.getHelpUrl("inout_spi_transfer_recv"),examples:["inout_spi_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,keys:["LANG_SPI_TRANSFER","LANG_SPI_TRANSFER_ONE_BYTE","LANG_SPI_TRANSFER_TWO_BYTES","LANG_SPI_TRANSFER_RECV_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.appendValueInput("DATA").appendField(RoboBlocks.locales.getKey("LANG_SPI_TRANSFER")).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_ONE_BYTE"),"1"],[RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_TWO_BYTES"),"2"]]),"MODE").setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Number),this.setPreviousStatement(!1,"code"),this.setNextStatement(!1,"code"),this.setInputsInline(!1),this.setTooltip(RoboBlocks.locales.getKey("LANG_SPI_TRANSFER_RECV_TOOLTIP"))}},Blockly.Arduino.inout_spi_end=function(){Blockly.Arduino.definitions_.include_spi="#include <SPI.h>\n";return"SPI.endTransaction();\n"},Blockly.Blocks.inout_spi_end={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),tags:["input","output","spi"],helpUrl:RoboBlocks.getHelpUrl("inout_spi_end"),examples:["inout_spi_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,keys:["LANG_SPI_END","LANG_SPI_END_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.appendDummyInput("").appendField(RoboBlocks.locales.getKey("LANG_SPI_END")),this.setOutput(!1,null),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_SPI_END_TOOLTIP"))}},Blockly.Arduino.joystick_dir=function(){var o=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_NONE),l=RoboBlocks.findPinMode(o);return l.code,o=l.pin,(l=RoboBlocks.findPinMode(e)).code,["57.295779513082320876798154814105*atan2((float)(analogRead("+o+")-512),(float)(analogRead("+(e=l.pin)+")-512))",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_dir={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_OTHER"),tags:["joystick"],helpUrl:RoboBlocks.getHelpUrl("joystick_dir"),examples:["joystick_dir_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_OTHER,keys:["LANG_BQ_JOYSTICK_DIR","LANG_BQ_JOYSTICK_PIN_X","LANG_BQ_JOYSTICK_PIN_Y","LANG_BQ_JOYSTICK_DIR_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_OTHER),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_DIR")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(["ANALOG_PIN",Number]),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(["ANALOG_PIN",Number]),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_DIR_TOOLTIP"))}},Blockly.Arduino.joystick_mag=function(){var o=Blockly.Arduino.valueToCode(this,"PINX",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(this,"PINY",Blockly.Arduino.ORDER_ATOMIC),l=RoboBlocks.findPinMode(o);return l.code,o=l.pin,(l=RoboBlocks.findPinMode(e)).code,["min(100,0.1953125*sqrt(pow((float)(analogRead("+o+")-512),2)+pow((float)(analogRead("+(e=l.pin)+")-512),2)))",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.joystick_mag={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_OTHER"),tags:["joystick"],helpUrl:RoboBlocks.getHelpUrl("joystick_mag"),examples:["joystick_dir_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_OTHER,keys:["LANG_BQ_JOYSTICK_MAG","LANG_BQ_JOYSTICK_PIN_X","LANG_BQ_JOYSTICK_PIN_Y","LANG_BQ_JOYSTICK_MAG_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_OTHER),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_MAG")).appendField(new Blockly.FieldImage("img/blocks/joystick.png",52*options.zoom,24*options.zoom)),this.appendValueInput("PINX").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_X")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(["ANALOG_PIN",Number]),this.appendValueInput("PINY").appendField(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_PIN_Y")).appendField(new Blockly.FieldImage("img/blocks/analog_signal.svg",22*options.zoom,22*options.zoom)).setAlign(Blockly.ALIGN_RIGHT).setCheck(["ANALOG_PIN",Number]),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.locales.getKey("LANG_BQ_JOYSTICK_MAG_TOOLTIP"))}},Blockly.Arduino.dyor_31_in_1_rele=function(){var o="",e=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE),l=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ATOMIC),t=RoboBlocks.findPinMode(e);return o+=t.code,e=t.pin,RoboBlocks.isVariable(e)?o+=JST.inout_digital_write_setups({dropdown_pin:e}):Blockly.Arduino.setups_["setup_digital_write_"+e]=JST.inout_digital_write_setups({dropdown_pin:e}),o+=JST.inout_digital_write({dropdown_pin:e,dropdown_stat:l})},Blockly.Blocks.dyor_31_in_1_rele={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_OTHER"),tags:["input","output","rele"],helpUrl:RoboBlocks.getHelpUrl("dyor_31_in_1_rele"),examples:["dyor_31_in_1_relay_example.bly"],category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_OTHER,keys:["LANG_RELE","LANG_RELE_VALUE","LANG_RELE_TOOLTIP"],init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_OTHER),this.appendValueInput("PIN").appendField(RoboBlocks.locales.getKey("LANG_RELE")).appendField(new Blockly.FieldImage("img/blocks/relays.png",52*options.zoom,24*options.zoom)).appendField(RoboBlocks.locales.getKey("LANG_RELE_PIN")).appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(["DIGITAL_PIN",Number]),this.appendValueInput("VALUE",Boolean).setCheck(Boolean).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_RELE_VALUE")),this.setPreviousStatement("code"),this.setNextStatement("code"),this.setTooltip(RoboBlocks.locales.getKey("LANG_RELE_TOOLTIP"))}},"ATmega328"!==profiles.processor&&"ATmega32U4"!==profiles.processor&&"ATmega2560"!==profiles.processor&&"ESP8266"!==profiles.processor||(Blockly.Arduino.i2c_read_byte=function(o){var e=o.getFieldValue("ADDRESS");if(Blockly.Arduino.definitions_.define_wire_h=JST.wire_definitions_include({}),Blockly.Arduino.definitions_.define_I2C_read_byte="uint8_t I2C_read_byte(uint8_t address) {\n uint8_t data=0;\n Wire.requestFrom(address,1);\n if (Wire.available()){\n  data=Wire.read();\n }\n\n return data;\n \n }\n ","ATmega"===profiles.processor)Blockly.Arduino.setups_.setup_wire="Wire.begin();\n ";else if("ESP8266"===profiles.processor){var l=Blockly.Arduino.valueToCode(this,"SDA",Blockly.Arduino.ORDER_ATOMIC),t=Blockly.Arduino.valueToCode(this,"SCL",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_wire="Wire.begin("+l+","+t+");\n "}var s="";return[s+="I2C_read_byte("+e+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.i2c_read_byte={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,helpUrl:RoboBlocks.getHelpUrl("i2c_read_bytes"),tags:[],examples:[],keys:["LANG_I2C_READ_BYTE","LANG_I2C_ADDRESS","LANG_I2C_READ_BYTE_TOOLTIP"],init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_I2C_READ_BYTE")).appendField(RoboBlocks.locales.getKey("LANG_I2C_ADDRESS")).appendField(new Blockly.FieldTextInput("0",this.validator_),"ADDRESS"),"ESP32"===profiles.processor&&(this.appendValueInput("SDA").setAlign(Blockly.ALIGN_RIGHT).appendField("SDA").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number),this.appendValueInput("SCL").setAlign(Blockly.ALIGN_RIGHT).appendField("SCL").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number)),this.setOutput(!0,Number),this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.setTooltip(RoboBlocks.locales.getKey("LANG_I2C_READ_BYTE_TOOLTIP"))},validator_:function(o){var e=window.parseInt(o||0),l=null;return window.isNaN(e)||0<=e&e<=127&&(l=e),l}},Blockly.Arduino.i2c_read_bytes=function(o){var e=o.getFieldValue("ADDRESS"),l=Blockly.Arduino.valueToCode(this,"VARIABLE",Blockly.Arduino.ORDER_ATOMIC),t="";if(Blockly.Arduino.definitions_.define_wire_h=JST.wire_definitions_include({}),Blockly.Arduino.definitions_.define_I2C_read_bytes="void I2C_read_bytes(uint8_t address, uint8_t* variable, uint8_t bytes) {\n uint8_t i=0;\n Wire.requestFrom(address,bytes);\n while(Wire.available()){\n  variable[i]=Wire.read();\n  i++;\n }\n\n }\n ","ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor)Blockly.Arduino.setups_.setup_wire="Wire.begin();\n ";else if("ESP8266"===profiles.processor){var s=Blockly.Arduino.valueToCode(this,"SDA",Blockly.Arduino.ORDER_ATOMIC),i=Blockly.Arduino.valueToCode(this,"SCL",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_wire="Wire.begin("+s+","+i+");\n "}return null!==this.getInputTargetBlock("VARIABLE")&&("variable"===RoboBlocks.variables[l][2]?"byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(byte));\n ":"short"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(short));\n ":"int"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(int));\n ":"long"===RoboBlocks.variables[l][0]&&(t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(long));\n "):"1DArray"===RoboBlocks.variables[l][2]&&("byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+","+RoboBlocks.variables[l][3]+");\n ":"short"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(short)*"+RoboBlocks.variables[l][3]+");\n ":"int"===RoboBlocks.variables[l][0]?t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(int)*"+RoboBlocks.variables[l][3]+");\n ":"long"===RoboBlocks.variables[l][0]&&(t+="I2C_read_bytes("+e+",(byte*)&"+l+",sizeof(long)*"+RoboBlocks.variables[l][3]+");\n "))),t},Blockly.Blocks.i2c_read_bytes={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,helpUrl:RoboBlocks.getHelpUrl("i2c_read_bytes"),tags:[],examples:[],keys:["LANG_I2C_READ_BYTES","LANG_I2C_READ_BYTES_WITH","LANG_I2C_ADDRESS","LANG_I2C_READ_BYTES_TOOLTIP"],init:function(){this.appendValueInput("VARIABLE").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_I2C_READ_BYTES")).appendField(RoboBlocks.locales.getKey("LANG_I2C_READ_BYTES_WITH")).setCheck("Array"),this.appendDummyInput().appendField(RoboBlocks.locales.getKey("LANG_I2C_ADDRESS")).appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.i2c_read_byte.validator),"ADDRESS").setAlign(Blockly.ALIGN_RIGHT),"ESP8266"===profiles.processor&&(this.appendValueInput("SDA").setAlign(Blockly.ALIGN_RIGHT).appendField("SDA").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number),this.appendValueInput("SCL").setAlign(Blockly.ALIGN_RIGHT).appendField("SCL").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number)),this.setOutput(!1),"ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor?this.setInputsInline(!0):"ESP8266"===profiles.processor&&this.setInputsInline(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.setTooltip(RoboBlocks.locales.getKey("LANG_I2C_READ_BYTES_TOOLTIP"))}},Blockly.Arduino.i2c_send_bytes=function(o){var e=o.getFieldValue("ADDRESS"),l=Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC),t="";if(null!==this.getInputTargetBlock("DATA")){var s=this.getInputTargetBlock("DATA");if(Blockly.Arduino.definitions_.define_wire_h=JST.wire_definitions_include({}),Blockly.Arduino.definitions_.define_I2C_send_bytes="void I2C_send_bytes(byte address, byte* val, int length)\n{\n  Wire.beginTransmission(address);\n  for (int i=0;i<length;i++)\n    Wire.write(val[i]);\n  Wire.endTransmission();\n}\n","ATmega328"===profiles.processor||"ATmega32U4"===profiles.processor||"ATmega2560"===profiles.processor)Blockly.Arduino.setups_.setup_wire="Wire.begin();\n ";else if("ESP8266"===profiles.processor){var i=Blockly.Arduino.valueToCode(this,"SDA",Blockly.Arduino.ORDER_ATOMIC),_=Blockly.Arduino.valueToCode(this,"SCL",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_wire="Wire.begin("+i+","+_+");\n "}if("variables_get"===s.type)"variable"===RoboBlocks.variables[l][2]?"byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(byte));\n ":"short"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(short));\n ":"int"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(int));\n ":"long"===RoboBlocks.variables[l][0]&&(t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(long));\n "):"1DArray"===RoboBlocks.variables[l][2]&&("byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+","+RoboBlocks.variables[l][3]+");\n ":"short"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(short)*"+RoboBlocks.variables[l][3]+");\n ":"int"===RoboBlocks.variables[l][0]?t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(int)*"+RoboBlocks.variables[l][3]+");\n ":"long"===RoboBlocks.variables[l][0]&&(t+="I2C_send_bytes("+e+",(byte*)&"+l+",sizeof(long)*"+RoboBlocks.variables[l][3]+");\n "));else if("math_number"===s.type){var n=window.parseInt(l);window.isNaN(n)||(0<=n&&n<=127?(t+="{\n",t+="byte _i2c_data="+l+";\n",t+="I2C_send_bytes("+e+",&_i2c_data,sizeof(byte));\n ",t+="}\n"):128<=n&&n<=65535?(t+="{\n",t+="short _i2c_data="+l+";\n",t+="I2C_send_bytes("+e+",(byte*)&_i2c_data,sizeof(short));\n ",t+="}\n"):65536<=n&&n<=4294967295&&(t+="{\n",t+="long _i2c_data="+l+";\n",t+="I2C_send_bytes("+e+",(byte*)&_i2c_data,sizeof(long));\n ",t+="}\n"))}}return t},Blockly.Blocks.i2c_send_bytes={category:RoboBlocks.locales.getKey("LANG_CATEGORY_ADVANCED"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_BUS"),category_colour:RoboBlocks.LANG_COLOUR_ADVANCED,colour:RoboBlocks.LANG_COLOUR_ADVANCED_BUS,helpUrl:RoboBlocks.getHelpUrl("i2c_send_bytes"),tags:[],examples:[],keys:["LANG_I2C_SEND","LANG_I2C_ADDRESS","LANG_I2C_BYTES","LANG_I2C_SEND_BYTES_TOOLTIP"],init:function(){this.appendValueInput("DATA").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_I2C_SEND")).appendField(RoboBlocks.locales.getKey("LANG_I2C_ADDRESS")).appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.i2c_read_byte.validator),"ADDRESS").appendField(RoboBlocks.locales.getKey("LANG_I2C_BYTES")).setCheck([Number,"Array"]),"ESP8266"===profiles.processor&&(this.appendValueInput("SDA").setAlign(Blockly.ALIGN_RIGHT).appendField("SDA").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number),this.appendValueInput("SCL").setAlign(Blockly.ALIGN_RIGHT).appendField("SCL").appendField(new Blockly.FieldImage("img/blocks/digital_signal.png",22*options.zoom,22*options.zoom)).setCheck(Number)),this.setOutput(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED_BUS),this.setTooltip(RoboBlocks.locales.getKey("LANG_I2C_SEND_BYTES_TOOLTIP"))}},Blockly.Arduino.eeprom_clear=function(o){o.getFieldValue("ADDRESS"),Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.define_eeprom_h="#include <EEPROM.h>",Blockly.Arduino.definitions_.define_eeprom_clear="void EEPROM_clear()\n{\n  for (int i = 0 ; i < EEPROM.length() ; i++)\n    EEPROM.write(i, 0);\n}\n","EEPROM_clear();\n","EEPROM_clear();\n"},Blockly.Blocks.eeprom_clear={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_EEPROM"),category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,helpUrl:RoboBlocks.getHelpUrl("eeprom_clear"),tags:[],examples:[],keys:["LANG_EEPROM_CLEAR","LANG_EEPROM_CLEAR_TOOLTIP"],init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_CLEAR")),this.setOutput(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.setTooltip(RoboBlocks.locales.getKey("LANG_EEPROM_CLEAR_TOOLTIP"))}},Blockly.Arduino.eeprom_read_byte=function(o){var e=Blockly.Arduino.valueToCode(this,"ADDRESS",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.define_eeprom_h="#include <EEPROM.h>";var l="";return[l+="EEPROM.read("+e+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.eeprom_read_byte={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_EEPROM"),category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,helpUrl:RoboBlocks.getHelpUrl("eeprom_read_byte"),tags:[],examples:[],keys:["LANG_EEPROM_READ_BYTE","LANG_EEPROM_ADDRESS","LANG_EEPROM_READ_BYTE_TOOLTIP"],init:function(){this.appendValueInput("ADDRESS").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_READ_BYTE")).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_ADDRESS")),this.setOutput(!0,Number),this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.setTooltip(RoboBlocks.locales.getKey("LANG_EEPROM_READ_BYTE_TOOLTIP"))}},Blockly.Arduino.eeprom_read_bytes=function(o){var e=Blockly.Arduino.valueToCode(this,"ADDRESS",Blockly.Arduino.ORDER_ATOMIC),l=Blockly.Arduino.valueToCode(this,"VARIABLE",Blockly.Arduino.ORDER_ATOMIC),t="";return Blockly.Arduino.definitions_.define_eeprom_h="#include <EEPROM.h>",Blockly.Arduino.definitions_.define_eeprom_read_bytes="void EEPROM_read_bytes(int address, uint8_t* variable, int bytes) {\n  for (int i=0;i<bytes;i++)\n    variable[i]=EEPROM.read(address+i);\n}\n ",null!==this.getInputTargetBlock("VARIABLE")&&("byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="EEPROM_read_bytes("+e+",(byte*)&"+l+","+RoboBlocks.variables[l][3]+");\n ":"short"===RoboBlocks.variables[l][0]?t+="EEPROM_read_bytes("+e+",(byte*)&"+l+",sizeof(short)*"+RoboBlocks.variables[l][3]+");\n ":"int"===RoboBlocks.variables[l][0]?t+="EEPROM_read_bytes("+e+",(byte*)&"+l+",sizeof(int)*"+RoboBlocks.variables[l][3]+");\n ":"long"===RoboBlocks.variables[l][0]?t+="EEPROM_read_bytes("+e+",(byte*)&"+l+",sizeof(long)*"+RoboBlocks.variables[l][3]+");\n ":"float"===RoboBlocks.variables[l][0]&&(t+="EEPROM_read_bytes("+e+",(byte*)&"+l+",sizeof(float)*"+RoboBlocks.variables[l][3]+");\n ")),t},Blockly.Blocks.eeprom_read_bytes={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_EEPROM"),category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,helpUrl:RoboBlocks.getHelpUrl("eeprom_read_bytes"),tags:[],examples:[],keys:["LANG_EEPROM_READ_BYTES","LANG_EEPROM_READ_BYTES_WITH","LANG_EEPROM_ADDRESS","LANG_EEPROM_READ_BYTES_TOOLTIP"],init:function(){this.appendValueInput("VARIABLE").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_READ_BYTES")).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_READ_BYTES_WITH")).setCheck("Array"),this.appendValueInput("ADDRESS").appendField(RoboBlocks.locales.getKey("LANG_EEPROM_ADDRESS")),this.setOutput(!1),this.setInputsInline(!0),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.setTooltip(RoboBlocks.locales.getKey("LANG_EEPROM_READ_BYTES_TOOLTIP"))}},Blockly.Arduino.eeprom_write_bytes=function(o){var e=Blockly.Arduino.valueToCode(this,"ADDRESS",Blockly.Arduino.ORDER_ATOMIC),l=Blockly.Arduino.valueToCode(this,"DATA",Blockly.Arduino.ORDER_ATOMIC),t="";if(Blockly.Arduino.definitions_.define_eeprom_h="#include <EEPROM.h>",Blockly.Arduino.definitions_.define_EEPROM_write_bytes="void EEPROM_write_bytes(byte address, byte* val, int length)\n{\n  for (int i=0;i<length;i++)\n    EEPROM.write(address+i,val[i]);\n}\n",null!==this.getInputTargetBlock("DATA")){var s=this.getInputTargetBlock("DATA");if("variables_get"===s.type)"variable"===RoboBlocks.variables[l][2]?"byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(byte));\n ":"short"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(short));\n ":"int"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(int));\n ":"long"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(long));\n ":"float"===RoboBlocks.variables[l][0]&&(t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(float));\n "):"1DArray"===RoboBlocks.variables[l][2]&&("byte"===RoboBlocks.variables[l][0]||"char"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+","+RoboBlocks.variables[l][3]+");\n ":"short"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(short)*"+RoboBlocks.variables[l][3]+");\n ":"int"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(int)*"+RoboBlocks.variables[l][3]+");\n ":"long"===RoboBlocks.variables[l][0]?t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(long)*"+RoboBlocks.variables[l][3]+");\n ":"float"===RoboBlocks.variables[l][0]&&(t+="EEPROM_write_bytes("+e+",(byte*)&"+l+",sizeof(float)*"+RoboBlocks.variables[l][3]+");\n "));else if("math_number"===s.type){var i;l.includes(".")?(i=window.parseFloat(l),window.isNaN(i)||(t+="{\n",t+="float _eeprom_data="+l+";\n",t+="EEPROM_write_bytes("+e+",(byte*)&_eeprom_data,4);\n ",t+="}\n")):(i=window.parseInt(l),window.isNaN(i)||(0<=i&&i<=127?(t+="{\n",t+="byte _eeprom_data="+l+";\n",t+="EEPROM_write_bytes("+e+",&_eeprom_data,sizeof(byte=);\n ",t+="}\n"):128<=i&&i<=65535?(t+="{\n",t+="short _eeprom_data="+l+";\n",t+="EEPROM_write_bytes("+e+",(byte*)&_eeprom_data,sizeof(short));\n ",t+="}\n"):65536<=i&&i<=4294967295&&(t+="{\n",t+="long _eeprom_data="+l+";\n",t+="EEPROM_write_bytes("+e+",(byte*)&_eeprom_data,sizeof(long));\n ",t+="}\n")))}}return t},Blockly.Blocks.eeprom_write_bytes={category:RoboBlocks.locales.getKey("LANG_CATEGORY_VARIABLES"),subcategory:RoboBlocks.locales.getKey("LANG_SUBCATEGORY_EEPROM"),category_colour:RoboBlocks.LANG_COLOUR_VARIABLES,colour:RoboBlocks.LANG_COLOUR_VARIABLES,helpUrl:RoboBlocks.getHelpUrl("eeprom_write_bytes"),tags:[],examples:[],keys:["LANG_EEPROM_WRITE","LANG_EEPROM_ADDRESS","LANG_EEPROM_BYTES","LANG_EEPROM_WRITE_BYTES_TOOLTIP"],init:function(){this.appendValueInput("ADDRESS").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_WRITE")).appendField(RoboBlocks.locales.getKey("LANG_EEPROM_ADDRESS")),this.appendValueInput("DATA").appendField(RoboBlocks.locales.getKey("LANG_EEPROM_BYTES")).setCheck([Number,"Array"]),this.setOutput(!1),this.setPreviousStatement(!0,"code"),this.setNextStatement(!0,"code"),this.setInputsInline(!0),this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.setTooltip(RoboBlocks.locales.getKey("LANG_EEPROM_WRITE_BYTES_TOOLTIP"))}}),Blockly.Blocks},RoboBlocks={load:load};if("function"==typeof define&&define.amd)return RoboBlocks;window.RoboBlocks=RoboBlocks});